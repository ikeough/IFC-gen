scalar StrippedOptional
scalar AbsorbedDoseMeasure
scalar AccelerationMeasure
scalar AmountOfSubstanceMeasure
scalar AngularVelocityMeasure
scalar ArcIndex
scalar AreaDensityMeasure
scalar AreaMeasure
scalar Binary
scalar Boolean
scalar BoxAlignment
scalar CardinalPointReference
scalar ComplexNumber
scalar CompoundPlaneAngleMeasure
scalar ContextDependentMeasure
scalar CountMeasure
scalar CurvatureMeasure
scalar Date
scalar DateTime
scalar DayInMonthNumber
scalar DayInWeekNumber
scalar DescriptiveMeasure
scalar DimensionCount
scalar DoseEquivalentMeasure
scalar Duration
scalar DynamicViscosityMeasure
scalar ElectricCapacitanceMeasure
scalar ElectricChargeMeasure
scalar ElectricConductanceMeasure
scalar ElectricCurrentMeasure
scalar ElectricResistanceMeasure
scalar ElectricVoltageMeasure
scalar EnergyMeasure
scalar FontStyle
scalar FontVariant
scalar FontWeight
scalar ForceMeasure
scalar FrequencyMeasure
scalar GloballyUniqueId
scalar HeatFluxDensityMeasure
scalar HeatingValueMeasure
scalar Identifier
scalar IlluminanceMeasure
scalar InductanceMeasure
scalar Integer
scalar IntegerCountRateMeasure
scalar IonConcentrationMeasure
scalar IsothermalMoistureCapacityMeasure
scalar KinematicViscosityMeasure
scalar Label
scalar LanguageId
scalar LengthMeasure
scalar LineIndex
scalar LinearForceMeasure
scalar LinearMomentMeasure
scalar LinearStiffnessMeasure
scalar LinearVelocityMeasure
scalar Logical
scalar LuminousFluxMeasure
scalar LuminousIntensityDistributionMeasure
scalar LuminousIntensityMeasure
scalar MagneticFluxDensityMeasure
scalar MagneticFluxMeasure
scalar MassDensityMeasure
scalar MassFlowRateMeasure
scalar MassMeasure
scalar MassPerLengthMeasure
scalar ModulusOfElasticityMeasure
scalar ModulusOfLinearSubgradeReactionMeasure
scalar ModulusOfRotationalSubgradeReactionMeasure
scalar ModulusOfSubgradeReactionMeasure
scalar MoistureDiffusivityMeasure
scalar MolecularWeightMeasure
scalar MomentOfInertiaMeasure
scalar MonetaryMeasure
scalar MonthInYearNumber
scalar NonNegativeLengthMeasure
scalar NormalisedRatioMeasure
scalar NumericMeasure
scalar PHMeasure
scalar ParameterValue
scalar PlanarForceMeasure
scalar PlaneAngleMeasure
scalar PositiveInteger
scalar PositiveLengthMeasure
scalar PositivePlaneAngleMeasure
scalar PositiveRatioMeasure
scalar PowerMeasure
scalar PresentableText
scalar PressureMeasure
scalar PropertySetDefinitionSet
scalar RadioActivityMeasure
scalar RatioMeasure
scalar Real
scalar RotationalFrequencyMeasure
scalar RotationalMassMeasure
scalar RotationalStiffnessMeasure
scalar SectionModulusMeasure
scalar SectionalAreaIntegralMeasure
scalar ShearModulusMeasure
scalar SolidAngleMeasure
scalar SoundPowerLevelMeasure
scalar SoundPowerMeasure
scalar SoundPressureLevelMeasure
scalar SoundPressureMeasure
scalar SpecificHeatCapacityMeasure
scalar SpecularExponent
scalar SpecularRoughness
scalar TemperatureGradientMeasure
scalar TemperatureRateOfChangeMeasure
scalar Text
scalar TextAlignment
scalar TextDecoration
scalar TextFontName
scalar TextTransformation
scalar ThermalAdmittanceMeasure
scalar ThermalConductivityMeasure
scalar ThermalExpansionCoefficientMeasure
scalar ThermalResistanceMeasure
scalar ThermalTransmittanceMeasure
scalar ThermodynamicTemperatureMeasure
scalar Time
scalar TimeMeasure
scalar TimeStamp
scalar TorqueMeasure
scalar URIReference
scalar VaporPermeabilityMeasure
scalar VolumeMeasure
scalar VolumetricFlowRateMeasure
scalar WarpingConstantMeasure
scalar WarpingMomentMeasure

enum ActionRequestTypeEnum {
	EMAIL
	FAX
	PHONE
	POST
	VERBAL
	USERDEFINED
	NOTDEFINED
}
enum ActionSourceTypeEnum {
	DEAD_LOAD_G
	COMPLETION_G1
	LIVE_LOAD_Q
	SNOW_S
	WIND_W
	PRESTRESSING_P
	SETTLEMENT_U
	TEMPERATURE_T
	EARTHQUAKE_E
	FIRE
	IMPULSE
	IMPACT
	TRANSPORT
	ERECTION
	PROPPING
	SYSTEM_IMPERFECTION
	SHRINKAGE
	CREEP
	LACK_OF_FIT
	BUOYANCY
	ICE
	CURRENT
	WAVE
	RAIN
	BRAKES
	USERDEFINED
	NOTDEFINED
}
enum ActionTypeEnum {
	PERMANENT_G
	VARIABLE_Q
	EXTRAORDINARY_A
	USERDEFINED
	NOTDEFINED
}
enum ActuatorTypeEnum {
	ELECTRICACTUATOR
	HANDOPERATEDACTUATOR
	HYDRAULICACTUATOR
	PNEUMATICACTUATOR
	THERMOSTATICACTUATOR
	USERDEFINED
	NOTDEFINED
}
enum AddressTypeEnum {
	OFFICE
	SITE
	HOME
	DISTRIBUTIONPOINT
	USERDEFINED
}
enum AirTerminalBoxTypeEnum {
	CONSTANTFLOW
	VARIABLEFLOWPRESSUREDEPENDANT
	VARIABLEFLOWPRESSUREINDEPENDANT
	USERDEFINED
	NOTDEFINED
}
enum AirTerminalTypeEnum {
	DIFFUSER
	GRILLE
	LOUVRE
	REGISTER
	USERDEFINED
	NOTDEFINED
}
enum AirToAirHeatRecoveryTypeEnum {
	FIXEDPLATECOUNTERFLOWEXCHANGER
	FIXEDPLATECROSSFLOWEXCHANGER
	FIXEDPLATEPARALLELFLOWEXCHANGER
	ROTARYWHEEL
	RUNAROUNDCOILLOOP
	HEATPIPE
	TWINTOWERENTHALPYRECOVERYLOOPS
	THERMOSIPHONSEALEDTUBEHEATEXCHANGERS
	THERMOSIPHONCOILTYPEHEATEXCHANGERS
	USERDEFINED
	NOTDEFINED
}
enum AlarmTypeEnum {
	BELL
	BREAKGLASSBUTTON
	LIGHT
	MANUALPULLBOX
	SIREN
	WHISTLE
	USERDEFINED
	NOTDEFINED
}
enum AnalysisModelTypeEnum {
	IN_PLANE_LOADING_2D
	OUT_PLANE_LOADING_2D
	LOADING_3D
	USERDEFINED
	NOTDEFINED
}
enum AnalysisTheoryTypeEnum {
	FIRST_ORDER_THEORY
	SECOND_ORDER_THEORY
	THIRD_ORDER_THEORY
	FULL_NONLINEAR_THEORY
	USERDEFINED
	NOTDEFINED
}
enum ArithmeticOperatorEnum {
	ADD
	DIVIDE
	MULTIPLY
	SUBTRACT
}
enum AssemblyPlaceEnum {
	SITE
	FACTORY
	NOTDEFINED
}
enum AudioVisualApplianceTypeEnum {
	AMPLIFIER
	CAMERA
	DISPLAY
	MICROPHONE
	PLAYER
	PROJECTOR
	RECEIVER
	SPEAKER
	SWITCHER
	TELEPHONE
	TUNER
	USERDEFINED
	NOTDEFINED
}
enum BSplineCurveForm {
	POLYLINE_FORM
	CIRCULAR_ARC
	ELLIPTIC_ARC
	PARABOLIC_ARC
	HYPERBOLIC_ARC
	UNSPECIFIED
}
enum BSplineSurfaceForm {
	PLANE_SURF
	CYLINDRICAL_SURF
	CONICAL_SURF
	SPHERICAL_SURF
	TOROIDAL_SURF
	SURF_OF_REVOLUTION
	RULED_SURF
	GENERALISED_CONE
	QUADRIC_SURF
	SURF_OF_LINEAR_EXTRUSION
	UNSPECIFIED
}
enum BeamTypeEnum {
	BEAM
	JOIST
	HOLLOWCORE
	LINTEL
	SPANDREL
	T_BEAM
	USERDEFINED
	NOTDEFINED
}
enum BenchmarkEnum {
	GREATERTHAN
	GREATERTHANOREQUALTO
	LESSTHAN
	LESSTHANOREQUALTO
	EQUALTO
	NOTEQUALTO
	INCLUDES
	NOTINCLUDES
	INCLUDEDIN
	NOTINCLUDEDIN
}
enum BoilerTypeEnum {
	WATER
	STEAM
	USERDEFINED
	NOTDEFINED
}
enum BooleanOperator {
	UNION
	INTERSECTION
	DIFFERENCE
}
enum BuildingElementPartTypeEnum {
	INSULATION
	PRECASTPANEL
	USERDEFINED
	NOTDEFINED
}
enum BuildingElementProxyTypeEnum {
	COMPLEX
	ELEMENT
	PARTIAL
	PROVISIONFORVOID
	PROVISIONFORSPACE
	USERDEFINED
	NOTDEFINED
}
enum BuildingSystemTypeEnum {
	FENESTRATION
	FOUNDATION
	LOADBEARING
	OUTERSHELL
	SHADING
	TRANSPORT
	USERDEFINED
	NOTDEFINED
}
enum BurnerTypeEnum {
	USERDEFINED
	NOTDEFINED
}
enum CableCarrierFittingTypeEnum {
	BEND
	CROSS
	REDUCER
	TEE
	USERDEFINED
	NOTDEFINED
}
enum CableCarrierSegmentTypeEnum {
	CABLELADDERSEGMENT
	CABLETRAYSEGMENT
	CABLETRUNKINGSEGMENT
	CONDUITSEGMENT
	USERDEFINED
	NOTDEFINED
}
enum CableFittingTypeEnum {
	CONNECTOR
	ENTRY
	EXIT
	JUNCTION
	TRANSITION
	USERDEFINED
	NOTDEFINED
}
enum CableSegmentTypeEnum {
	BUSBARSEGMENT
	CABLESEGMENT
	CONDUCTORSEGMENT
	CORESEGMENT
	USERDEFINED
	NOTDEFINED
}
enum ChangeActionEnum {
	NOCHANGE
	MODIFIED
	ADDED
	DELETED
	NOTDEFINED
}
enum ChillerTypeEnum {
	AIRCOOLED
	WATERCOOLED
	HEATRECOVERY
	USERDEFINED
	NOTDEFINED
}
enum ChimneyTypeEnum {
	USERDEFINED
	NOTDEFINED
}
enum CoilTypeEnum {
	DXCOOLINGCOIL
	ELECTRICHEATINGCOIL
	GASHEATINGCOIL
	HYDRONICCOIL
	STEAMHEATINGCOIL
	WATERCOOLINGCOIL
	WATERHEATINGCOIL
	USERDEFINED
	NOTDEFINED
}
enum ColumnTypeEnum {
	COLUMN
	PILASTER
	USERDEFINED
	NOTDEFINED
}
enum CommunicationsApplianceTypeEnum {
	ANTENNA
	COMPUTER
	FAX
	GATEWAY
	MODEM
	NETWORKAPPLIANCE
	NETWORKBRIDGE
	NETWORKHUB
	PRINTER
	REPEATER
	ROUTER
	SCANNER
	USERDEFINED
	NOTDEFINED
}
enum ComplexPropertyTemplateTypeEnum {
	P_COMPLEX
	Q_COMPLEX
}
enum CompressorTypeEnum {
	DYNAMIC
	RECIPROCATING
	ROTARY
	SCROLL
	TROCHOIDAL
	SINGLESTAGE
	BOOSTER
	OPENTYPE
	HERMETIC
	SEMIHERMETIC
	WELDEDSHELLHERMETIC
	ROLLINGPISTON
	ROTARYVANE
	SINGLESCREW
	TWINSCREW
	USERDEFINED
	NOTDEFINED
}
enum CondenserTypeEnum {
	AIRCOOLED
	EVAPORATIVECOOLED
	WATERCOOLED
	WATERCOOLEDBRAZEDPLATE
	WATERCOOLEDSHELLCOIL
	WATERCOOLEDSHELLTUBE
	WATERCOOLEDTUBEINTUBE
	USERDEFINED
	NOTDEFINED
}
enum ConnectionTypeEnum {
	ATPATH
	ATSTART
	ATEND
	NOTDEFINED
}
enum ConstraintEnum {
	HARD
	SOFT
	ADVISORY
	USERDEFINED
	NOTDEFINED
}
enum ConstructionEquipmentResourceTypeEnum {
	DEMOLISHING
	EARTHMOVING
	ERECTING
	HEATING
	LIGHTING
	PAVING
	PUMPING
	TRANSPORTING
	USERDEFINED
	NOTDEFINED
}
enum ConstructionMaterialResourceTypeEnum {
	AGGREGATES
	CONCRETE
	DRYWALL
	FUEL
	GYPSUM
	MASONRY
	METAL
	PLASTIC
	WOOD
	NOTDEFINED
	USERDEFINED
}
enum ConstructionProductResourceTypeEnum {
	ASSEMBLY
	FORMWORK
	USERDEFINED
	NOTDEFINED
}
enum ControllerTypeEnum {
	FLOATING
	PROGRAMMABLE
	PROPORTIONAL
	MULTIPOSITION
	TWOPOSITION
	USERDEFINED
	NOTDEFINED
}
enum CooledBeamTypeEnum {
	ACTIVE
	PASSIVE
	USERDEFINED
	NOTDEFINED
}
enum CoolingTowerTypeEnum {
	NATURALDRAFT
	MECHANICALINDUCEDDRAFT
	MECHANICALFORCEDDRAFT
	USERDEFINED
	NOTDEFINED
}
enum CostItemTypeEnum {
	USERDEFINED
	NOTDEFINED
}
enum CostScheduleTypeEnum {
	BUDGET
	COSTPLAN
	ESTIMATE
	TENDER
	PRICEDBILLOFQUANTITIES
	UNPRICEDBILLOFQUANTITIES
	SCHEDULEOFRATES
	USERDEFINED
	NOTDEFINED
}
enum CoveringTypeEnum {
	CEILING
	FLOORING
	CLADDING
	ROOFING
	MOLDING
	SKIRTINGBOARD
	INSULATION
	MEMBRANE
	SLEEVING
	WRAPPING
	USERDEFINED
	NOTDEFINED
}
enum CrewResourceTypeEnum {
	OFFICE
	SITE
	USERDEFINED
	NOTDEFINED
}
enum CurtainWallTypeEnum {
	USERDEFINED
	NOTDEFINED
}
enum CurveInterpolationEnum {
	LINEAR
	LOG_LINEAR
	LOG_LOG
	NOTDEFINED
}
enum DamperTypeEnum {
	BACKDRAFTDAMPER
	BALANCINGDAMPER
	BLASTDAMPER
	CONTROLDAMPER
	FIREDAMPER
	FIRESMOKEDAMPER
	FUMEHOODEXHAUST
	GRAVITYDAMPER
	GRAVITYRELIEFDAMPER
	RELIEFDAMPER
	SMOKEDAMPER
	USERDEFINED
	NOTDEFINED
}
enum DataOriginEnum {
	MEASURED
	PREDICTED
	SIMULATED
	USERDEFINED
	NOTDEFINED
}
enum DerivedUnitEnum {
	ANGULARVELOCITYUNIT
	AREADENSITYUNIT
	COMPOUNDPLANEANGLEUNIT
	DYNAMICVISCOSITYUNIT
	HEATFLUXDENSITYUNIT
	INTEGERCOUNTRATEUNIT
	ISOTHERMALMOISTURECAPACITYUNIT
	KINEMATICVISCOSITYUNIT
	LINEARVELOCITYUNIT
	MASSDENSITYUNIT
	MASSFLOWRATEUNIT
	MOISTUREDIFFUSIVITYUNIT
	MOLECULARWEIGHTUNIT
	SPECIFICHEATCAPACITYUNIT
	THERMALADMITTANCEUNIT
	THERMALCONDUCTANCEUNIT
	THERMALRESISTANCEUNIT
	THERMALTRANSMITTANCEUNIT
	VAPORPERMEABILITYUNIT
	VOLUMETRICFLOWRATEUNIT
	ROTATIONALFREQUENCYUNIT
	TORQUEUNIT
	MOMENTOFINERTIAUNIT
	LINEARMOMENTUNIT
	LINEARFORCEUNIT
	PLANARFORCEUNIT
	MODULUSOFELASTICITYUNIT
	SHEARMODULUSUNIT
	LINEARSTIFFNESSUNIT
	ROTATIONALSTIFFNESSUNIT
	MODULUSOFSUBGRADEREACTIONUNIT
	ACCELERATIONUNIT
	CURVATUREUNIT
	HEATINGVALUEUNIT
	IONCONCENTRATIONUNIT
	LUMINOUSINTENSITYDISTRIBUTIONUNIT
	MASSPERLENGTHUNIT
	MODULUSOFLINEARSUBGRADEREACTIONUNIT
	MODULUSOFROTATIONALSUBGRADEREACTIONUNIT
	PHUNIT
	ROTATIONALMASSUNIT
	SECTIONAREAINTEGRALUNIT
	SECTIONMODULUSUNIT
	SOUNDPOWERLEVELUNIT
	SOUNDPOWERUNIT
	SOUNDPRESSURELEVELUNIT
	SOUNDPRESSUREUNIT
	TEMPERATUREGRADIENTUNIT
	TEMPERATURERATEOFCHANGEUNIT
	THERMALEXPANSIONCOEFFICIENTUNIT
	WARPINGCONSTANTUNIT
	WARPINGMOMENTUNIT
	USERDEFINED
}
enum DirectionSenseEnum {
	POSITIVE
	NEGATIVE
}
enum DiscreteAccessoryTypeEnum {
	ANCHORPLATE
	BRACKET
	SHOE
	USERDEFINED
	NOTDEFINED
}
enum DistributionChamberElementTypeEnum {
	FORMEDDUCT
	INSPECTIONCHAMBER
	INSPECTIONPIT
	MANHOLE
	METERCHAMBER
	SUMP
	TRENCH
	VALVECHAMBER
	USERDEFINED
	NOTDEFINED
}
enum DistributionPortTypeEnum {
	CABLE
	CABLECARRIER
	DUCT
	PIPE
	USERDEFINED
	NOTDEFINED
}
enum DistributionSystemEnum {
	AIRCONDITIONING
	AUDIOVISUAL
	CHEMICAL
	CHILLEDWATER
	COMMUNICATION
	COMPRESSEDAIR
	CONDENSERWATER
	CONTROL
	CONVEYING
	DATA
	DISPOSAL
	DOMESTICCOLDWATER
	DOMESTICHOTWATER
	DRAINAGE
	EARTHING
	ELECTRICAL
	ELECTROACOUSTIC
	EXHAUST
	FIREPROTECTION
	FUEL
	GAS
	HAZARDOUS
	HEATING
	LIGHTING
	LIGHTNINGPROTECTION
	MUNICIPALSOLIDWASTE
	OIL
	OPERATIONAL
	POWERGENERATION
	RAINWATER
	REFRIGERATION
	SECURITY
	SEWAGE
	SIGNAL
	STORMWATER
	TELEPHONE
	TV
	VACUUM
	VENT
	VENTILATION
	WASTEWATER
	WATERSUPPLY
	USERDEFINED
	NOTDEFINED
}
enum DocumentConfidentialityEnum {
	PUBLIC
	RESTRICTED
	CONFIDENTIAL
	PERSONAL
	USERDEFINED
	NOTDEFINED
}
enum DocumentStatusEnum {
	DRAFT
	FINALDRAFT
	FINAL
	REVISION
	NOTDEFINED
}
enum DoorPanelOperationEnum {
	SWINGING
	DOUBLE_ACTING
	SLIDING
	FOLDING
	REVOLVING
	ROLLINGUP
	FIXEDPANEL
	USERDEFINED
	NOTDEFINED
}
enum DoorPanelPositionEnum {
	LEFT
	MIDDLE
	RIGHT
	NOTDEFINED
}
enum DoorStyleConstructionEnum {
	ALUMINIUM
	HIGH_GRADE_STEEL
	STEEL
	WOOD
	ALUMINIUM_WOOD
	ALUMINIUM_PLASTIC
	PLASTIC
	USERDEFINED
	NOTDEFINED
}
enum DoorStyleOperationEnum {
	SINGLE_SWING_LEFT
	SINGLE_SWING_RIGHT
	DOUBLE_DOOR_SINGLE_SWING
	DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT
	DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT
	DOUBLE_SWING_LEFT
	DOUBLE_SWING_RIGHT
	DOUBLE_DOOR_DOUBLE_SWING
	SLIDING_TO_LEFT
	SLIDING_TO_RIGHT
	DOUBLE_DOOR_SLIDING
	FOLDING_TO_LEFT
	FOLDING_TO_RIGHT
	DOUBLE_DOOR_FOLDING
	REVOLVING
	ROLLINGUP
	USERDEFINED
	NOTDEFINED
}
enum DoorTypeEnum {
	DOOR
	GATE
	TRAPDOOR
	USERDEFINED
	NOTDEFINED
}
enum DoorTypeOperationEnum {
	SINGLE_SWING_LEFT
	SINGLE_SWING_RIGHT
	DOUBLE_DOOR_SINGLE_SWING
	DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT
	DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT
	DOUBLE_SWING_LEFT
	DOUBLE_SWING_RIGHT
	DOUBLE_DOOR_DOUBLE_SWING
	SLIDING_TO_LEFT
	SLIDING_TO_RIGHT
	DOUBLE_DOOR_SLIDING
	FOLDING_TO_LEFT
	FOLDING_TO_RIGHT
	DOUBLE_DOOR_FOLDING
	REVOLVING
	ROLLINGUP
	SWING_FIXED_LEFT
	SWING_FIXED_RIGHT
	USERDEFINED
	NOTDEFINED
}
enum DuctFittingTypeEnum {
	BEND
	CONNECTOR
	ENTRY
	EXIT
	JUNCTION
	OBSTRUCTION
	TRANSITION
	USERDEFINED
	NOTDEFINED
}
enum DuctSegmentTypeEnum {
	RIGIDSEGMENT
	FLEXIBLESEGMENT
	USERDEFINED
	NOTDEFINED
}
enum DuctSilencerTypeEnum {
	FLATOVAL
	RECTANGULAR
	ROUND
	USERDEFINED
	NOTDEFINED
}
enum ElectricApplianceTypeEnum {
	DISHWASHER
	ELECTRICCOOKER
	FREESTANDINGELECTRICHEATER
	FREESTANDINGFAN
	FREESTANDINGWATERHEATER
	FREESTANDINGWATERCOOLER
	FREEZER
	FRIDGE_FREEZER
	HANDDRYER
	KITCHENMACHINE
	MICROWAVE
	PHOTOCOPIER
	REFRIGERATOR
	TUMBLEDRYER
	VENDINGMACHINE
	WASHINGMACHINE
	USERDEFINED
	NOTDEFINED
}
enum ElectricDistributionBoardTypeEnum {
	CONSUMERUNIT
	DISTRIBUTIONBOARD
	MOTORCONTROLCENTRE
	SWITCHBOARD
	USERDEFINED
	NOTDEFINED
}
enum ElectricFlowStorageDeviceTypeEnum {
	BATTERY
	CAPACITORBANK
	HARMONICFILTER
	INDUCTORBANK
	UPS
	USERDEFINED
	NOTDEFINED
}
enum ElectricGeneratorTypeEnum {
	CHP
	ENGINEGENERATOR
	STANDALONE
	USERDEFINED
	NOTDEFINED
}
enum ElectricMotorTypeEnum {
	DC
	INDUCTION
	POLYPHASE
	RELUCTANCESYNCHRONOUS
	SYNCHRONOUS
	USERDEFINED
	NOTDEFINED
}
enum ElectricTimeControlTypeEnum {
	TIMECLOCK
	TIMEDELAY
	RELAY
	USERDEFINED
	NOTDEFINED
}
enum ElementAssemblyTypeEnum {
	ACCESSORY_ASSEMBLY
	ARCH
	BEAM_GRID
	BRACED_FRAME
	GIRDER
	REINFORCEMENT_UNIT
	RIGID_FRAME
	SLAB_FIELD
	TRUSS
	USERDEFINED
	NOTDEFINED
}
enum ElementCompositionEnum {
	COMPLEX
	ELEMENT
	PARTIAL
}
enum EngineTypeEnum {
	EXTERNALCOMBUSTION
	INTERNALCOMBUSTION
	USERDEFINED
	NOTDEFINED
}
enum EvaporativeCoolerTypeEnum {
	DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER
	DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER
	DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER
	DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER
	DIRECTEVAPORATIVEAIRWASHER
	INDIRECTEVAPORATIVEPACKAGEAIRCOOLER
	INDIRECTEVAPORATIVEWETCOIL
	INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER
	INDIRECTDIRECTCOMBINATION
	USERDEFINED
	NOTDEFINED
}
enum EvaporatorTypeEnum {
	DIRECTEXPANSION
	DIRECTEXPANSIONSHELLANDTUBE
	DIRECTEXPANSIONTUBEINTUBE
	DIRECTEXPANSIONBRAZEDPLATE
	FLOODEDSHELLANDTUBE
	SHELLANDCOIL
	USERDEFINED
	NOTDEFINED
}
enum EventTriggerTypeEnum {
	EVENTRULE
	EVENTMESSAGE
	EVENTTIME
	EVENTCOMPLEX
	USERDEFINED
	NOTDEFINED
}
enum EventTypeEnum {
	STARTEVENT
	ENDEVENT
	INTERMEDIATEEVENT
	USERDEFINED
	NOTDEFINED
}
enum ExternalSpatialElementTypeEnum {
	EXTERNAL
	EXTERNAL_EARTH
	EXTERNAL_WATER
	EXTERNAL_FIRE
	USERDEFINED
	NOTDEFINED
}
enum FanTypeEnum {
	CENTRIFUGALFORWARDCURVED
	CENTRIFUGALRADIAL
	CENTRIFUGALBACKWARDINCLINEDCURVED
	CENTRIFUGALAIRFOIL
	TUBEAXIAL
	VANEAXIAL
	PROPELLORAXIAL
	USERDEFINED
	NOTDEFINED
}
enum FastenerTypeEnum {
	GLUE
	MORTAR
	WELD
	USERDEFINED
	NOTDEFINED
}
enum FilterTypeEnum {
	AIRPARTICLEFILTER
	COMPRESSEDAIRFILTER
	ODORFILTER
	OILFILTER
	STRAINER
	WATERFILTER
	USERDEFINED
	NOTDEFINED
}
enum FireSuppressionTerminalTypeEnum {
	BREECHINGINLET
	FIREHYDRANT
	HOSEREEL
	SPRINKLER
	SPRINKLERDEFLECTOR
	USERDEFINED
	NOTDEFINED
}
enum FlowDirectionEnum {
	SOURCE
	SINK
	SOURCEANDSINK
	NOTDEFINED
}
enum FlowInstrumentTypeEnum {
	PRESSUREGAUGE
	THERMOMETER
	AMMETER
	FREQUENCYMETER
	POWERFACTORMETER
	PHASEANGLEMETER
	VOLTMETER_PEAK
	VOLTMETER_RMS
	USERDEFINED
	NOTDEFINED
}
enum FlowMeterTypeEnum {
	ENERGYMETER
	GASMETER
	OILMETER
	WATERMETER
	USERDEFINED
	NOTDEFINED
}
enum FootingTypeEnum {
	CAISSON_FOUNDATION
	FOOTING_BEAM
	PAD_FOOTING
	PILE_CAP
	STRIP_FOOTING
	USERDEFINED
	NOTDEFINED
}
enum FurnitureTypeEnum {
	CHAIR
	TABLE
	DESK
	BED
	FILECABINET
	SHELF
	SOFA
	USERDEFINED
	NOTDEFINED
}
enum GeographicElementTypeEnum {
	TERRAIN
	USERDEFINED
	NOTDEFINED
}
enum GeometricProjectionEnum {
	GRAPH_VIEW
	SKETCH_VIEW
	MODEL_VIEW
	PLAN_VIEW
	REFLECTED_PLAN_VIEW
	SECTION_VIEW
	ELEVATION_VIEW
	USERDEFINED
	NOTDEFINED
}
enum GlobalOrLocalEnum {
	GLOBAL_COORDS
	LOCAL_COORDS
}
enum GridTypeEnum {
	RECTANGULAR
	RADIAL
	TRIANGULAR
	IRREGULAR
	USERDEFINED
	NOTDEFINED
}
enum HeatExchangerTypeEnum {
	PLATE
	SHELLANDTUBE
	USERDEFINED
	NOTDEFINED
}
enum HumidifierTypeEnum {
	STEAMINJECTION
	ADIABATICAIRWASHER
	ADIABATICPAN
	ADIABATICWETTEDELEMENT
	ADIABATICATOMIZING
	ADIABATICULTRASONIC
	ADIABATICRIGIDMEDIA
	ADIABATICCOMPRESSEDAIRNOZZLE
	ASSISTEDELECTRIC
	ASSISTEDNATURALGAS
	ASSISTEDPROPANE
	ASSISTEDBUTANE
	ASSISTEDSTEAM
	USERDEFINED
	NOTDEFINED
}
enum InterceptorTypeEnum {
	CYCLONIC
	GREASE
	OIL
	PETROL
	USERDEFINED
	NOTDEFINED
}
enum InternalOrExternalEnum {
	INTERNAL
	EXTERNAL
	EXTERNAL_EARTH
	EXTERNAL_WATER
	EXTERNAL_FIRE
	NOTDEFINED
}
enum InventoryTypeEnum {
	ASSETINVENTORY
	SPACEINVENTORY
	FURNITUREINVENTORY
	USERDEFINED
	NOTDEFINED
}
enum JunctionBoxTypeEnum {
	DATA
	POWER
	USERDEFINED
	NOTDEFINED
}
enum KnotType {
	UNIFORM_KNOTS
	QUASI_UNIFORM_KNOTS
	PIECEWISE_BEZIER_KNOTS
	UNSPECIFIED
}
enum LaborResourceTypeEnum {
	ADMINISTRATION
	CARPENTRY
	CLEANING
	CONCRETE
	DRYWALL
	ELECTRIC
	FINISHING
	FLOORING
	GENERAL
	HVAC
	LANDSCAPING
	MASONRY
	PAINTING
	PAVING
	PLUMBING
	ROOFING
	SITEGRADING
	STEELWORK
	SURVEYING
	USERDEFINED
	NOTDEFINED
}
enum LampTypeEnum {
	COMPACTFLUORESCENT
	FLUORESCENT
	HALOGEN
	HIGHPRESSUREMERCURY
	HIGHPRESSURESODIUM
	LED
	METALHALIDE
	OLED
	TUNGSTENFILAMENT
	USERDEFINED
	NOTDEFINED
}
enum LayerSetDirectionEnum {
	AXIS1
	AXIS2
	AXIS3
}
enum LightDistributionCurveEnum {
	TYPE_A
	TYPE_B
	TYPE_C
	NOTDEFINED
}
enum LightEmissionSourceEnum {
	COMPACTFLUORESCENT
	FLUORESCENT
	HIGHPRESSUREMERCURY
	HIGHPRESSURESODIUM
	LIGHTEMITTINGDIODE
	LOWPRESSURESODIUM
	LOWVOLTAGEHALOGEN
	MAINVOLTAGEHALOGEN
	METALHALIDE
	TUNGSTENFILAMENT
	NOTDEFINED
}
enum LightFixtureTypeEnum {
	POINTSOURCE
	DIRECTIONSOURCE
	SECURITYLIGHTING
	USERDEFINED
	NOTDEFINED
}
enum LoadGroupTypeEnum {
	LOAD_GROUP
	LOAD_CASE
	LOAD_COMBINATION
	USERDEFINED
	NOTDEFINED
}
enum LogicalOperatorEnum {
	LOGICALAND
	LOGICALOR
	LOGICALXOR
	LOGICALNOTAND
	LOGICALNOTOR
}
enum MechanicalFastenerTypeEnum {
	ANCHORBOLT
	BOLT
	DOWEL
	NAIL
	NAILPLATE
	RIVET
	SCREW
	SHEARCONNECTOR
	STAPLE
	STUDSHEARCONNECTOR
	USERDEFINED
	NOTDEFINED
}
enum MedicalDeviceTypeEnum {
	AIRSTATION
	FEEDAIRUNIT
	OXYGENGENERATOR
	OXYGENPLANT
	VACUUMSTATION
	USERDEFINED
	NOTDEFINED
}
enum MemberTypeEnum {
	BRACE
	CHORD
	COLLAR
	MEMBER
	MULLION
	PLATE
	POST
	PURLIN
	RAFTER
	STRINGER
	STRUT
	STUD
	USERDEFINED
	NOTDEFINED
}
enum MotorConnectionTypeEnum {
	BELTDRIVE
	COUPLING
	DIRECTDRIVE
	USERDEFINED
	NOTDEFINED
}
enum NullStyle {
	NULL
}
enum ObjectTypeEnum {
	PRODUCT
	PROCESS
	CONTROL
	RESOURCE
	ACTOR
	GROUP
	PROJECT
	NOTDEFINED
}
enum ObjectiveEnum {
	CODECOMPLIANCE
	CODEWAIVER
	DESIGNINTENT
	EXTERNAL
	HEALTHANDSAFETY
	MERGECONFLICT
	MODELVIEW
	PARAMETER
	REQUIREMENT
	SPECIFICATION
	TRIGGERCONDITION
	USERDEFINED
	NOTDEFINED
}
enum OccupantTypeEnum {
	ASSIGNEE
	ASSIGNOR
	LESSEE
	LESSOR
	LETTINGAGENT
	OWNER
	TENANT
	USERDEFINED
	NOTDEFINED
}
enum OpeningElementTypeEnum {
	OPENING
	RECESS
	USERDEFINED
	NOTDEFINED
}
enum OutletTypeEnum {
	AUDIOVISUALOUTLET
	COMMUNICATIONSOUTLET
	POWEROUTLET
	DATAOUTLET
	TELEPHONEOUTLET
	USERDEFINED
	NOTDEFINED
}
enum PerformanceHistoryTypeEnum {
	USERDEFINED
	NOTDEFINED
}
enum PermeableCoveringOperationEnum {
	GRILL
	LOUVER
	SCREEN
	USERDEFINED
	NOTDEFINED
}
enum PermitTypeEnum {
	ACCESS
	BUILDING
	WORK
	USERDEFINED
	NOTDEFINED
}
enum PhysicalOrVirtualEnum {
	PHYSICAL
	VIRTUAL
	NOTDEFINED
}
enum PileConstructionEnum {
	CAST_IN_PLACE
	COMPOSITE
	PRECAST_CONCRETE
	PREFAB_STEEL
	USERDEFINED
	NOTDEFINED
}
enum PileTypeEnum {
	BORED
	DRIVEN
	JETGROUTING
	COHESION
	FRICTION
	SUPPORT
	USERDEFINED
	NOTDEFINED
}
enum PipeFittingTypeEnum {
	BEND
	CONNECTOR
	ENTRY
	EXIT
	JUNCTION
	OBSTRUCTION
	TRANSITION
	USERDEFINED
	NOTDEFINED
}
enum PipeSegmentTypeEnum {
	CULVERT
	FLEXIBLESEGMENT
	RIGIDSEGMENT
	GUTTER
	SPOOL
	USERDEFINED
	NOTDEFINED
}
enum PlateTypeEnum {
	CURTAIN_PANEL
	SHEET
	USERDEFINED
	NOTDEFINED
}
enum PreferredSurfaceCurveRepresentation {
	CURVE3D
	PCURVE_S1
	PCURVE_S2
}
enum ProcedureTypeEnum {
	ADVICE_CAUTION
	ADVICE_NOTE
	ADVICE_WARNING
	CALIBRATION
	DIAGNOSTIC
	SHUTDOWN
	STARTUP
	USERDEFINED
	NOTDEFINED
}
enum ProfileTypeEnum {
	CURVE
	AREA
}
enum ProjectOrderTypeEnum {
	CHANGEORDER
	MAINTENANCEWORKORDER
	MOVEORDER
	PURCHASEORDER
	WORKORDER
	USERDEFINED
	NOTDEFINED
}
enum ProjectedOrTrueLengthEnum {
	PROJECTED_LENGTH
	TRUE_LENGTH
}
enum ProjectionElementTypeEnum {
	USERDEFINED
	NOTDEFINED
}
enum PropertySetTemplateTypeEnum {
	PSET_TYPEDRIVENONLY
	PSET_TYPEDRIVENOVERRIDE
	PSET_OCCURRENCEDRIVEN
	PSET_PERFORMANCEDRIVEN
	QTO_TYPEDRIVENONLY
	QTO_TYPEDRIVENOVERRIDE
	QTO_OCCURRENCEDRIVEN
	NOTDEFINED
}
enum ProtectiveDeviceTrippingUnitTypeEnum {
	ELECTRONIC
	ELECTROMAGNETIC
	RESIDUALCURRENT
	THERMAL
	USERDEFINED
	NOTDEFINED
}
enum ProtectiveDeviceTypeEnum {
	CIRCUITBREAKER
	EARTHLEAKAGECIRCUITBREAKER
	EARTHINGSWITCH
	FUSEDISCONNECTOR
	RESIDUALCURRENTCIRCUITBREAKER
	RESIDUALCURRENTSWITCH
	VARISTOR
	USERDEFINED
	NOTDEFINED
}
enum PumpTypeEnum {
	CIRCULATOR
	ENDSUCTION
	SPLITCASE
	SUBMERSIBLEPUMP
	SUMPPUMP
	VERTICALINLINE
	VERTICALTURBINE
	USERDEFINED
	NOTDEFINED
}
enum RailingTypeEnum {
	HANDRAIL
	GUARDRAIL
	BALUSTRADE
	USERDEFINED
	NOTDEFINED
}
enum RampFlightTypeEnum {
	STRAIGHT
	SPIRAL
	USERDEFINED
	NOTDEFINED
}
enum RampTypeEnum {
	STRAIGHT_RUN_RAMP
	TWO_STRAIGHT_RUN_RAMP
	QUARTER_TURN_RAMP
	TWO_QUARTER_TURN_RAMP
	HALF_TURN_RAMP
	SPIRAL_RAMP
	USERDEFINED
	NOTDEFINED
}
enum RecurrenceTypeEnum {
	DAILY
	WEEKLY
	MONTHLY_BY_DAY_OF_MONTH
	MONTHLY_BY_POSITION
	BY_DAY_COUNT
	BY_WEEKDAY_COUNT
	YEARLY_BY_DAY_OF_MONTH
	YEARLY_BY_POSITION
}
enum ReflectanceMethodEnum {
	BLINN
	FLAT
	GLASS
	MATT
	METAL
	MIRROR
	PHONG
	PLASTIC
	STRAUSS
	NOTDEFINED
}
enum ReinforcingBarRoleEnum {
	MAIN
	SHEAR
	LIGATURE
	STUD
	PUNCHING
	EDGE
	RING
	ANCHORING
	USERDEFINED
	NOTDEFINED
}
enum ReinforcingBarSurfaceEnum {
	PLAIN
	TEXTURED
}
enum ReinforcingBarTypeEnum {
	ANCHORING
	EDGE
	LIGATURE
	MAIN
	PUNCHING
	RING
	SHEAR
	STUD
	USERDEFINED
	NOTDEFINED
}
enum ReinforcingMeshTypeEnum {
	USERDEFINED
	NOTDEFINED
}
enum RoleEnum {
	SUPPLIER
	MANUFACTURER
	CONTRACTOR
	SUBCONTRACTOR
	ARCHITECT
	STRUCTURALENGINEER
	COSTENGINEER
	CLIENT
	BUILDINGOWNER
	BUILDINGOPERATOR
	MECHANICALENGINEER
	ELECTRICALENGINEER
	PROJECTMANAGER
	FACILITIESMANAGER
	CIVILENGINEER
	COMMISSIONINGENGINEER
	ENGINEER
	OWNER
	CONSULTANT
	CONSTRUCTIONMANAGER
	FIELDCONSTRUCTIONMANAGER
	RESELLER
	USERDEFINED
}
enum RoofTypeEnum {
	FLAT_ROOF
	SHED_ROOF
	GABLE_ROOF
	HIP_ROOF
	HIPPED_GABLE_ROOF
	GAMBREL_ROOF
	MANSARD_ROOF
	BARREL_ROOF
	RAINBOW_ROOF
	BUTTERFLY_ROOF
	PAVILION_ROOF
	DOME_ROOF
	FREEFORM
	USERDEFINED
	NOTDEFINED
}
enum SIPrefix {
	EXA
	PETA
	TERA
	GIGA
	MEGA
	KILO
	HECTO
	DECA
	DECI
	CENTI
	MILLI
	MICRO
	NANO
	PICO
	FEMTO
	ATTO
}
enum SIUnitName {
	AMPERE
	BECQUEREL
	CANDELA
	COULOMB
	CUBIC_METRE
	DEGREE_CELSIUS
	FARAD
	GRAM
	GRAY
	HENRY
	HERTZ
	JOULE
	KELVIN
	LUMEN
	LUX
	METRE
	MOLE
	NEWTON
	OHM
	PASCAL
	RADIAN
	SECOND
	SIEMENS
	SIEVERT
	SQUARE_METRE
	STERADIAN
	TESLA
	VOLT
	WATT
	WEBER
}
enum SanitaryTerminalTypeEnum {
	BATH
	BIDET
	CISTERN
	SHOWER
	SINK
	SANITARYFOUNTAIN
	TOILETPAN
	URINAL
	WASHHANDBASIN
	WCSEAT
	USERDEFINED
	NOTDEFINED
}
enum SectionTypeEnum {
	UNIFORM
	TAPERED
}
enum SensorTypeEnum {
	COSENSOR
	CO2SENSOR
	CONDUCTANCESENSOR
	CONTACTSENSOR
	FIRESENSOR
	FLOWSENSOR
	FROSTSENSOR
	GASSENSOR
	HEATSENSOR
	HUMIDITYSENSOR
	IDENTIFIERSENSOR
	IONCONCENTRATIONSENSOR
	LEVELSENSOR
	LIGHTSENSOR
	MOISTURESENSOR
	MOVEMENTSENSOR
	PHSENSOR
	PRESSURESENSOR
	RADIATIONSENSOR
	RADIOACTIVITYSENSOR
	SMOKESENSOR
	SOUNDSENSOR
	TEMPERATURESENSOR
	WINDSENSOR
	USERDEFINED
	NOTDEFINED
}
enum SequenceEnum {
	START_START
	START_FINISH
	FINISH_START
	FINISH_FINISH
	USERDEFINED
	NOTDEFINED
}
enum ShadingDeviceTypeEnum {
	JALOUSIE
	SHUTTER
	AWNING
	USERDEFINED
	NOTDEFINED
}
enum SimplePropertyTemplateTypeEnum {
	P_SINGLEVALUE
	P_ENUMERATEDVALUE
	P_BOUNDEDVALUE
	P_LISTVALUE
	P_TABLEVALUE
	P_REFERENCEVALUE
	Q_LENGTH
	Q_AREA
	Q_VOLUME
	Q_COUNT
	Q_WEIGHT
	Q_TIME
}
enum SlabTypeEnum {
	FLOOR
	ROOF
	LANDING
	BASESLAB
	USERDEFINED
	NOTDEFINED
}
enum SolarDeviceTypeEnum {
	SOLARCOLLECTOR
	SOLARPANEL
	USERDEFINED
	NOTDEFINED
}
enum SpaceHeaterTypeEnum {
	CONVECTOR
	RADIATOR
	USERDEFINED
	NOTDEFINED
}
enum SpaceTypeEnum {
	SPACE
	PARKING
	GFA
	INTERNAL
	EXTERNAL
	USERDEFINED
	NOTDEFINED
}
enum SpatialZoneTypeEnum {
	CONSTRUCTION
	FIRESAFETY
	LIGHTING
	OCCUPANCY
	SECURITY
	THERMAL
	TRANSPORT
	VENTILATION
	USERDEFINED
	NOTDEFINED
}
enum StackTerminalTypeEnum {
	BIRDCAGE
	COWL
	RAINWATERHOPPER
	USERDEFINED
	NOTDEFINED
}
enum StairFlightTypeEnum {
	STRAIGHT
	WINDER
	SPIRAL
	CURVED
	FREEFORM
	USERDEFINED
	NOTDEFINED
}
enum StairTypeEnum {
	STRAIGHT_RUN_STAIR
	TWO_STRAIGHT_RUN_STAIR
	QUARTER_WINDING_STAIR
	QUARTER_TURN_STAIR
	HALF_WINDING_STAIR
	HALF_TURN_STAIR
	TWO_QUARTER_WINDING_STAIR
	TWO_QUARTER_TURN_STAIR
	THREE_QUARTER_WINDING_STAIR
	THREE_QUARTER_TURN_STAIR
	SPIRAL_STAIR
	DOUBLE_RETURN_STAIR
	CURVED_RUN_STAIR
	TWO_CURVED_RUN_STAIR
	USERDEFINED
	NOTDEFINED
}
enum StateEnum {
	READWRITE
	READONLY
	LOCKED
	READWRITELOCKED
	READONLYLOCKED
}
enum StructuralCurveActivityTypeEnum {
	CONST
	LINEAR
	POLYGONAL
	EQUIDISTANT
	SINUS
	PARABOLA
	DISCRETE
	USERDEFINED
	NOTDEFINED
}
enum StructuralCurveMemberTypeEnum {
	RIGID_JOINED_MEMBER
	PIN_JOINED_MEMBER
	CABLE
	TENSION_MEMBER
	COMPRESSION_MEMBER
	USERDEFINED
	NOTDEFINED
}
enum StructuralSurfaceActivityTypeEnum {
	CONST
	BILINEAR
	DISCRETE
	ISOCONTOUR
	USERDEFINED
	NOTDEFINED
}
enum StructuralSurfaceMemberTypeEnum {
	BENDING_ELEMENT
	MEMBRANE_ELEMENT
	SHELL
	USERDEFINED
	NOTDEFINED
}
enum SubContractResourceTypeEnum {
	PURCHASE
	WORK
	USERDEFINED
	NOTDEFINED
}
enum SurfaceFeatureTypeEnum {
	MARK
	TAG
	TREATMENT
	USERDEFINED
	NOTDEFINED
}
enum SurfaceSide {
	POSITIVE
	NEGATIVE
	BOTH
}
enum SwitchingDeviceTypeEnum {
	CONTACTOR
	DIMMERSWITCH
	EMERGENCYSTOP
	KEYPAD
	MOMENTARYSWITCH
	SELECTORSWITCH
	STARTER
	SWITCHDISCONNECTOR
	TOGGLESWITCH
	USERDEFINED
	NOTDEFINED
}
enum SystemFurnitureElementTypeEnum {
	PANEL
	WORKSURFACE
	USERDEFINED
	NOTDEFINED
}
enum TankTypeEnum {
	BASIN
	BREAKPRESSURE
	EXPANSION
	FEEDANDEXPANSION
	PRESSUREVESSEL
	STORAGE
	VESSEL
	USERDEFINED
	NOTDEFINED
}
enum TaskDurationEnum {
	ELAPSEDTIME
	WORKTIME
	NOTDEFINED
}
enum TaskTypeEnum {
	ATTENDANCE
	CONSTRUCTION
	DEMOLITION
	DISMANTLE
	DISPOSAL
	INSTALLATION
	LOGISTIC
	MAINTENANCE
	MOVE
	OPERATION
	REMOVAL
	RENOVATION
	USERDEFINED
	NOTDEFINED
}
enum TendonAnchorTypeEnum {
	COUPLER
	FIXED_END
	TENSIONING_END
	USERDEFINED
	NOTDEFINED
}
enum TendonTypeEnum {
	BAR
	COATED
	STRAND
	WIRE
	USERDEFINED
	NOTDEFINED
}
enum TextPath {
	LEFT
	RIGHT
	UP
	DOWN
}
enum TimeSeriesDataTypeEnum {
	CONTINUOUS
	DISCRETE
	DISCRETEBINARY
	PIECEWISEBINARY
	PIECEWISECONSTANT
	PIECEWISECONTINUOUS
	NOTDEFINED
}
enum TransformerTypeEnum {
	CURRENT
	FREQUENCY
	INVERTER
	RECTIFIER
	VOLTAGE
	USERDEFINED
	NOTDEFINED
}
enum TransitionCode {
	DISCONTINUOUS
	CONTINUOUS
	CONTSAMEGRADIENT
	CONTSAMEGRADIENTSAMECURVATURE
}
enum TransportElementTypeEnum {
	ELEVATOR
	ESCALATOR
	MOVINGWALKWAY
	CRANEWAY
	LIFTINGGEAR
	USERDEFINED
	NOTDEFINED
}
enum TrimmingPreference {
	CARTESIAN
	PARAMETER
	UNSPECIFIED
}
enum TubeBundleTypeEnum {
	FINNED
	USERDEFINED
	NOTDEFINED
}
enum UnitEnum {
	ABSORBEDDOSEUNIT
	AMOUNTOFSUBSTANCEUNIT
	AREAUNIT
	DOSEEQUIVALENTUNIT
	ELECTRICCAPACITANCEUNIT
	ELECTRICCHARGEUNIT
	ELECTRICCONDUCTANCEUNIT
	ELECTRICCURRENTUNIT
	ELECTRICRESISTANCEUNIT
	ELECTRICVOLTAGEUNIT
	ENERGYUNIT
	FORCEUNIT
	FREQUENCYUNIT
	ILLUMINANCEUNIT
	INDUCTANCEUNIT
	LENGTHUNIT
	LUMINOUSFLUXUNIT
	LUMINOUSINTENSITYUNIT
	MAGNETICFLUXDENSITYUNIT
	MAGNETICFLUXUNIT
	MASSUNIT
	PLANEANGLEUNIT
	POWERUNIT
	PRESSUREUNIT
	RADIOACTIVITYUNIT
	SOLIDANGLEUNIT
	THERMODYNAMICTEMPERATUREUNIT
	TIMEUNIT
	VOLUMEUNIT
	USERDEFINED
}
enum UnitaryControlElementTypeEnum {
	ALARMPANEL
	CONTROLPANEL
	GASDETECTIONPANEL
	INDICATORPANEL
	MIMICPANEL
	HUMIDISTAT
	THERMOSTAT
	WEATHERSTATION
	USERDEFINED
	NOTDEFINED
}
enum UnitaryEquipmentTypeEnum {
	AIRHANDLER
	AIRCONDITIONINGUNIT
	DEHUMIDIFIER
	SPLITSYSTEM
	ROOFTOPUNIT
	USERDEFINED
	NOTDEFINED
}
enum ValveTypeEnum {
	AIRRELEASE
	ANTIVACUUM
	CHANGEOVER
	CHECK
	COMMISSIONING
	DIVERTING
	DRAWOFFCOCK
	DOUBLECHECK
	DOUBLEREGULATING
	FAUCET
	FLUSHING
	GASCOCK
	GASTAP
	ISOLATING
	MIXING
	PRESSUREREDUCING
	PRESSURERELIEF
	REGULATING
	SAFETYCUTOFF
	STEAMTRAP
	STOPCOCK
	USERDEFINED
	NOTDEFINED
}
enum VibrationIsolatorTypeEnum {
	COMPRESSION
	SPRING
	USERDEFINED
	NOTDEFINED
}
enum VoidingFeatureTypeEnum {
	CUTOUT
	NOTCH
	HOLE
	MITER
	CHAMFER
	EDGE
	USERDEFINED
	NOTDEFINED
}
enum WallTypeEnum {
	MOVABLE
	PARAPET
	PARTITIONING
	PLUMBINGWALL
	SHEAR
	SOLIDWALL
	STANDARD
	POLYGONAL
	ELEMENTEDWALL
	USERDEFINED
	NOTDEFINED
}
enum WasteTerminalTypeEnum {
	FLOORTRAP
	FLOORWASTE
	GULLYSUMP
	GULLYTRAP
	ROOFDRAIN
	WASTEDISPOSALUNIT
	WASTETRAP
	USERDEFINED
	NOTDEFINED
}
enum WindowPanelOperationEnum {
	SIDEHUNGRIGHTHAND
	SIDEHUNGLEFTHAND
	TILTANDTURNRIGHTHAND
	TILTANDTURNLEFTHAND
	TOPHUNG
	BOTTOMHUNG
	PIVOTHORIZONTAL
	PIVOTVERTICAL
	SLIDINGHORIZONTAL
	SLIDINGVERTICAL
	REMOVABLECASEMENT
	FIXEDCASEMENT
	OTHEROPERATION
	NOTDEFINED
}
enum WindowPanelPositionEnum {
	LEFT
	MIDDLE
	RIGHT
	BOTTOM
	TOP
	NOTDEFINED
}
enum WindowStyleConstructionEnum {
	ALUMINIUM
	HIGH_GRADE_STEEL
	STEEL
	WOOD
	ALUMINIUM_WOOD
	PLASTIC
	OTHER_CONSTRUCTION
	NOTDEFINED
}
enum WindowStyleOperationEnum {
	SINGLE_PANEL
	DOUBLE_PANEL_VERTICAL
	DOUBLE_PANEL_HORIZONTAL
	TRIPLE_PANEL_VERTICAL
	TRIPLE_PANEL_BOTTOM
	TRIPLE_PANEL_TOP
	TRIPLE_PANEL_LEFT
	TRIPLE_PANEL_RIGHT
	TRIPLE_PANEL_HORIZONTAL
	USERDEFINED
	NOTDEFINED
}
enum WindowTypeEnum {
	WINDOW
	SKYLIGHT
	LIGHTDOME
	USERDEFINED
	NOTDEFINED
}
enum WindowTypePartitioningEnum {
	SINGLE_PANEL
	DOUBLE_PANEL_VERTICAL
	DOUBLE_PANEL_HORIZONTAL
	TRIPLE_PANEL_VERTICAL
	TRIPLE_PANEL_BOTTOM
	TRIPLE_PANEL_TOP
	TRIPLE_PANEL_LEFT
	TRIPLE_PANEL_RIGHT
	TRIPLE_PANEL_HORIZONTAL
	USERDEFINED
	NOTDEFINED
}
enum WorkCalendarTypeEnum {
	FIRSTSHIFT
	SECONDSHIFT
	THIRDSHIFT
	USERDEFINED
	NOTDEFINED
}
enum WorkPlanTypeEnum {
	ACTUAL
	BASELINE
	PLANNED
	USERDEFINED
	NOTDEFINED
}
enum WorkScheduleTypeEnum {
	ACTUAL
	BASELINE
	PLANNED
	USERDEFINED
	NOTDEFINED
}
type ActionRequest implements Control{
	PredefinedType: ActionRequestTypeEnum!
	Status: Label!
	LongDescription: Text!
	Identification: Identifier!
	Controls: [RelAssignsToControl]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface Control implements Object{
	Identification: Identifier!
	Controls: [RelAssignsToControl]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Actor implements Object{
	TheActor: ActorSelect
	IsActingUpon: [RelAssignsToActor]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Occupant implements Actor{
	PredefinedType: OccupantTypeEnum!
	TheActor: ActorSelect
	IsActingUpon: [RelAssignsToActor]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface Object implements ObjectDefinition{
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ActorRole{
	Role: RoleEnum
	UserDefinedRole: Label!
	Description: Text!
	HasExternalReference: [ExternalReferenceRelationship]
}
type Actuator implements DistributionControlElement{
	PredefinedType: ActuatorTypeEnum!
	AssignedToFlowElement: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DistributionControlElement implements DistributionElement{
	AssignedToFlowElement: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ActuatorType implements DistributionControlElementType{
	PredefinedType: ActuatorTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface DistributionControlElementType implements DistributionElementType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface Address{
	Purpose: AddressTypeEnum!
	Description: Text!
	UserDefinedPurpose: Label!
	OfPerson: [Person]
	OfOrganization: [Organization]
}
type PostalAddress implements Address{
	InternalLocation: Label!
	AddressLines: [Label]!
	PostalBox: Label!
	Town: Label!
	Region: Label!
	PostalCode: Label!
	Country: Label!
	Purpose: AddressTypeEnum!
	Description: Text!
	UserDefinedPurpose: Label!
	OfPerson: [Person]
	OfOrganization: [Organization]
}
type TelecomAddress implements Address{
	TelephoneNumbers: [Label]!
	FacsimileNumbers: [Label]!
	PagerNumber: Label!
	ElectronicMailAddresses: [Label]!
	WWWHomePageURL: URIReference!
	MessagingIDs: [URIReference]!
	Purpose: AddressTypeEnum!
	Description: Text!
	UserDefinedPurpose: Label!
	OfPerson: [Person]
	OfOrganization: [Organization]
}
type AdvancedBrep implements ManifoldSolidBrep{
	Outer: ClosedShell
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type AdvancedBrepWithVoids implements AdvancedBrep{
	Voids: [ClosedShell]
	Outer: ClosedShell
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface ManifoldSolidBrep implements SolidModel{
	Outer: ClosedShell
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type AdvancedFace implements FaceSurface{
	FaceSurface: Surface
	SameSense: Boolean
	Bounds: [FaceBound]
	HasTextureMaps: [TextureMap]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type FaceSurface implements Face{
	FaceSurface: Surface
	SameSense: Boolean
	Bounds: [FaceBound]
	HasTextureMaps: [TextureMap]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type AirTerminal implements FlowTerminal{
	PredefinedType: AirTerminalTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FlowTerminal implements DistributionFlowElement{
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type AirTerminalBox implements FlowController{
	PredefinedType: AirTerminalBoxTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FlowController implements DistributionFlowElement{
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type AirTerminalBoxType implements FlowControllerType{
	PredefinedType: AirTerminalBoxTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface FlowControllerType implements DistributionFlowElementType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type AirTerminalType implements FlowTerminalType{
	PredefinedType: AirTerminalTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface FlowTerminalType implements DistributionFlowElementType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type AirToAirHeatRecovery implements EnergyConversionDevice{
	PredefinedType: AirToAirHeatRecoveryTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type EnergyConversionDevice implements DistributionFlowElement{
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type AirToAirHeatRecoveryType implements EnergyConversionDeviceType{
	PredefinedType: AirToAirHeatRecoveryTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface EnergyConversionDeviceType implements DistributionFlowElementType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Alarm implements DistributionControlElement{
	PredefinedType: AlarmTypeEnum!
	AssignedToFlowElement: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type AlarmType implements DistributionControlElementType{
	PredefinedType: AlarmTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Annotation implements Product{
	ContainedInStructure: [RelContainedInSpatialStructure]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface Product implements Object{
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type AnnotationFillArea implements GeometricRepresentationItem{
	OuterBoundary: Curve
	InnerBoundaries: [Curve]!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface GeometricRepresentationItem implements RepresentationItem{
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Application{
	ApplicationDeveloper: Organization
	Version: Label
	ApplicationFullName: Label
	ApplicationIdentifier: Identifier
}
type AppliedValue{
	Name: Label!
	Description: Text!
	AppliedValue: AppliedValueSelect!
	UnitBasis: MeasureWithUnit!
	ApplicableDate: Date!
	FixedUntilDate: Date!
	Category: Label!
	Condition: Label!
	ArithmeticOperator: ArithmeticOperatorEnum!
	Components: [AppliedValue]!
	HasExternalReference: [ExternalReferenceRelationship]
}
type CostValue implements AppliedValue{
	Name: Label!
	Description: Text!
	AppliedValue: AppliedValueSelect!
	UnitBasis: MeasureWithUnit!
	ApplicableDate: Date!
	FixedUntilDate: Date!
	Category: Label!
	Condition: Label!
	ArithmeticOperator: ArithmeticOperatorEnum!
	Components: [AppliedValue]!
	HasExternalReference: [ExternalReferenceRelationship]
}
type Approval{
	Identifier: Identifier!
	Name: Label!
	Description: Text!
	TimeOfApproval: DateTime!
	Status: Label!
	Level: Label!
	Qualifier: Text!
	RequestingApproval: ActorSelect!
	GivingApproval: ActorSelect!
	HasExternalReferences: [ExternalReferenceRelationship]
	ApprovedObjects: [RelAssociatesApproval]
	ApprovedResources: [ResourceApprovalRelationship]
	IsRelatedWith: [ApprovalRelationship]
	Relates: [ApprovalRelationship]
}
type ApprovalRelationship implements ResourceLevelRelationship{
	RelatingApproval: Approval
	RelatedApprovals: [Approval]
	Name: Label!
	Description: Text!
}
interface ResourceLevelRelationship{
	Name: Label!
	Description: Text!
}
type ArbitraryClosedProfileDef implements ProfileDef{
	OuterCurve: Curve
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type ArbitraryProfileDefWithVoids implements ArbitraryClosedProfileDef{
	InnerCurves: [Curve]
	OuterCurve: Curve
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type ProfileDef{
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type ArbitraryOpenProfileDef implements ProfileDef{
	Curve: BoundedCurve
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type CenterLineProfileDef implements ArbitraryOpenProfileDef{
	Thickness: PositiveLengthMeasure
	Curve: BoundedCurve
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type Asset implements Group{
	Identification: Identifier!
	OriginalValue: CostValue!
	CurrentValue: CostValue!
	TotalReplacementCost: CostValue!
	Owner: ActorSelect!
	User: ActorSelect!
	ResponsiblePerson: Person!
	IncorporationDate: Date!
	DepreciatedValue: CostValue!
	IsGroupedBy: [RelAssignsToGroup]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Group implements Object{
	IsGroupedBy: [RelAssignsToGroup]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type AsymmetricIShapeProfileDef implements ParameterizedProfileDef{
	BottomFlangeWidth: PositiveLengthMeasure
	OverallDepth: PositiveLengthMeasure
	WebThickness: PositiveLengthMeasure
	BottomFlangeThickness: PositiveLengthMeasure
	BottomFlangeFilletRadius: NonNegativeLengthMeasure!
	TopFlangeWidth: PositiveLengthMeasure
	TopFlangeThickness: PositiveLengthMeasure!
	TopFlangeFilletRadius: NonNegativeLengthMeasure!
	BottomFlangeEdgeRadius: NonNegativeLengthMeasure!
	BottomFlangeSlope: PlaneAngleMeasure!
	TopFlangeEdgeRadius: NonNegativeLengthMeasure!
	TopFlangeSlope: PlaneAngleMeasure!
	Position: Axis2Placement2D!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
interface ParameterizedProfileDef implements ProfileDef{
	Position: Axis2Placement2D!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type AudioVisualAppliance implements FlowTerminal{
	PredefinedType: AudioVisualApplianceTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type AudioVisualApplianceType implements FlowTerminalType{
	PredefinedType: AudioVisualApplianceTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Axis1Placement implements Placement{
	Axis: Direction!
	Location: CartesianPoint
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface Placement implements GeometricRepresentationItem{
	Location: CartesianPoint
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Axis2Placement2D implements Placement{
	RefDirection: Direction!
	Location: CartesianPoint
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Axis2Placement3D implements Placement{
	Axis: Direction!
	RefDirection: Direction!
	Location: CartesianPoint
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface BSplineCurve implements BoundedCurve{
	Degree: Integer
	ControlPointsList: [CartesianPoint]
	CurveForm: BSplineCurveForm
	ClosedCurve: Logical
	SelfIntersect: Logical
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type BSplineCurveWithKnots implements BSplineCurve{
	KnotMultiplicities: [Integer]
	Knots: [ParameterValue]
	KnotSpec: KnotType
	Degree: Integer
	ControlPointsList: [CartesianPoint]
	CurveForm: BSplineCurveForm
	ClosedCurve: Logical
	SelfIntersect: Logical
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface BoundedCurve implements Curve{
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type RationalBSplineCurveWithKnots implements BSplineCurveWithKnots{
	WeightsData: [Real]
	KnotMultiplicities: [Integer]
	Knots: [ParameterValue]
	KnotSpec: KnotType
	Degree: Integer
	ControlPointsList: [CartesianPoint]
	CurveForm: BSplineCurveForm
	ClosedCurve: Logical
	SelfIntersect: Logical
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface BSplineSurface implements BoundedSurface{
	UDegree: Integer
	VDegree: Integer
	ControlPointsList: [[CartesianPoint]]
	SurfaceForm: BSplineSurfaceForm
	UClosed: Logical
	VClosed: Logical
	SelfIntersect: Logical
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type BSplineSurfaceWithKnots implements BSplineSurface{
	UMultiplicities: [Integer]
	VMultiplicities: [Integer]
	UKnots: [ParameterValue]
	VKnots: [ParameterValue]
	KnotSpec: KnotType
	UDegree: Integer
	VDegree: Integer
	ControlPointsList: [[CartesianPoint]]
	SurfaceForm: BSplineSurfaceForm
	UClosed: Logical
	VClosed: Logical
	SelfIntersect: Logical
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface BoundedSurface implements Surface{
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type RationalBSplineSurfaceWithKnots implements BSplineSurfaceWithKnots{
	WeightsData: [[Real]]
	UMultiplicities: [Integer]
	VMultiplicities: [Integer]
	UKnots: [ParameterValue]
	VKnots: [ParameterValue]
	KnotSpec: KnotType
	UDegree: Integer
	VDegree: Integer
	ControlPointsList: [[CartesianPoint]]
	SurfaceForm: BSplineSurfaceForm
	UClosed: Logical
	VClosed: Logical
	SelfIntersect: Logical
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Beam implements BuildingElement{
	PredefinedType: BeamTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type BeamStandardCase implements Beam{
	PredefinedType: BeamTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface BuildingElement implements Element{
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type BeamType implements BuildingElementType{
	PredefinedType: BeamTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface BuildingElementType implements ElementType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type BlobTexture implements SurfaceTexture{
	RasterFormat: Identifier
	RasterCode: Binary
	RepeatS: Boolean
	RepeatT: Boolean
	Mode: Identifier!
	TextureTransform: CartesianTransformationOperator2D!
	Parameter: [Identifier]!
	IsMappedBy: [TextureCoordinate]
	UsedInStyles: [SurfaceStyleWithTextures]
}
interface SurfaceTexture implements PresentationItem{
	RepeatS: Boolean
	RepeatT: Boolean
	Mode: Identifier!
	TextureTransform: CartesianTransformationOperator2D!
	Parameter: [Identifier]!
	IsMappedBy: [TextureCoordinate]
	UsedInStyles: [SurfaceStyleWithTextures]
}
type Block implements CsgPrimitive3D{
	XLength: PositiveLengthMeasure
	YLength: PositiveLengthMeasure
	ZLength: PositiveLengthMeasure
	Position: Axis2Placement3D
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface CsgPrimitive3D implements GeometricRepresentationItem{
	Position: Axis2Placement3D
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Boiler implements EnergyConversionDevice{
	PredefinedType: BoilerTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type BoilerType implements EnergyConversionDeviceType{
	PredefinedType: BoilerTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type BooleanClippingResult implements BooleanResult{
	Operator: BooleanOperator
	FirstOperand: BooleanOperand
	SecondOperand: BooleanOperand
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type BooleanResult implements GeometricRepresentationItem{
	Operator: BooleanOperator
	FirstOperand: BooleanOperand
	SecondOperand: BooleanOperand
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface BoundaryCondition{
	Name: Label!
}
type BoundaryEdgeCondition implements BoundaryCondition{
	TranslationalStiffnessByLengthX: ModulusOfTranslationalSubgradeReactionSelect!
	TranslationalStiffnessByLengthY: ModulusOfTranslationalSubgradeReactionSelect!
	TranslationalStiffnessByLengthZ: ModulusOfTranslationalSubgradeReactionSelect!
	RotationalStiffnessByLengthX: ModulusOfRotationalSubgradeReactionSelect!
	RotationalStiffnessByLengthY: ModulusOfRotationalSubgradeReactionSelect!
	RotationalStiffnessByLengthZ: ModulusOfRotationalSubgradeReactionSelect!
	Name: Label!
}
type BoundaryFaceCondition implements BoundaryCondition{
	TranslationalStiffnessByAreaX: ModulusOfSubgradeReactionSelect!
	TranslationalStiffnessByAreaY: ModulusOfSubgradeReactionSelect!
	TranslationalStiffnessByAreaZ: ModulusOfSubgradeReactionSelect!
	Name: Label!
}
type BoundaryNodeCondition implements BoundaryCondition{
	TranslationalStiffnessX: TranslationalStiffnessSelect!
	TranslationalStiffnessY: TranslationalStiffnessSelect!
	TranslationalStiffnessZ: TranslationalStiffnessSelect!
	RotationalStiffnessX: RotationalStiffnessSelect!
	RotationalStiffnessY: RotationalStiffnessSelect!
	RotationalStiffnessZ: RotationalStiffnessSelect!
	Name: Label!
}
type BoundaryCurve implements CompositeCurveOnSurface{
	Segments: [CompositeCurveSegment]
	SelfIntersect: Logical
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type OuterBoundaryCurve implements BoundaryCurve{
	Segments: [CompositeCurveSegment]
	SelfIntersect: Logical
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type CompositeCurveOnSurface implements CompositeCurve{
	Segments: [CompositeCurveSegment]
	SelfIntersect: Logical
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type BoundaryNodeConditionWarping implements BoundaryNodeCondition{
	WarpingStiffness: WarpingStiffnessSelect!
	TranslationalStiffnessX: TranslationalStiffnessSelect!
	TranslationalStiffnessY: TranslationalStiffnessSelect!
	TranslationalStiffnessZ: TranslationalStiffnessSelect!
	RotationalStiffnessX: RotationalStiffnessSelect!
	RotationalStiffnessY: RotationalStiffnessSelect!
	RotationalStiffnessZ: RotationalStiffnessSelect!
	Name: Label!
}
type CompositeCurve implements BoundedCurve{
	Segments: [CompositeCurveSegment]
	SelfIntersect: Logical
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type IndexedPolyCurve implements BoundedCurve{
	Points: CartesianPointList
	Segments: [SegmentIndexSelect]!
	SelfIntersect: Boolean!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Polyline implements BoundedCurve{
	Points: [CartesianPoint]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type TrimmedCurve implements BoundedCurve{
	BasisCurve: Curve
	Trim1: [TrimmingSelect]
	Trim2: [TrimmingSelect]
	SenseAgreement: Boolean
	MasterRepresentation: TrimmingPreference
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface Curve implements GeometricRepresentationItem{
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type CurveBoundedPlane implements BoundedSurface{
	BasisSurface: Plane
	OuterBoundary: Curve
	InnerBoundaries: [Curve]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type CurveBoundedSurface implements BoundedSurface{
	BasisSurface: Surface
	Boundaries: [BoundaryCurve]
	ImplicitOuter: Boolean
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type RectangularTrimmedSurface implements BoundedSurface{
	BasisSurface: Surface
	U1: ParameterValue
	V1: ParameterValue
	U2: ParameterValue
	V2: ParameterValue
	Usense: Boolean
	Vsense: Boolean
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface Surface implements GeometricRepresentationItem{
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type BoundingBox implements GeometricRepresentationItem{
	Corner: CartesianPoint
	XDim: PositiveLengthMeasure
	YDim: PositiveLengthMeasure
	ZDim: PositiveLengthMeasure
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type BoxedHalfSpace implements HalfSpaceSolid{
	Enclosure: BoundingBox
	BaseSurface: Surface
	AgreementFlag: Boolean
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type HalfSpaceSolid implements GeometricRepresentationItem{
	BaseSurface: Surface
	AgreementFlag: Boolean
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Building implements SpatialStructureElement{
	ElevationOfRefHeight: LengthMeasure!
	ElevationOfTerrain: LengthMeasure!
	BuildingAddress: PostalAddress!
	CompositionType: ElementCompositionEnum!
	LongName: Label!
	ContainsElements: [RelContainedInSpatialStructure]
	ServicedBySystems: [RelServicesBuildings]
	ReferencesElements: [RelReferencedInSpatialStructure]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface SpatialStructureElement implements SpatialElement{
	CompositionType: ElementCompositionEnum!
	LongName: Label!
	ContainsElements: [RelContainedInSpatialStructure]
	ServicedBySystems: [RelServicesBuildings]
	ReferencesElements: [RelReferencedInSpatialStructure]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type BuildingElementProxy implements BuildingElement{
	PredefinedType: BuildingElementProxyTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Chimney implements BuildingElement{
	PredefinedType: ChimneyTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Column implements BuildingElement{
	PredefinedType: ColumnTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Covering implements BuildingElement{
	PredefinedType: CoveringTypeEnum!
	CoversSpaces: [RelCoversSpaces]
	CoversElements: [RelCoversBldgElements]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CurtainWall implements BuildingElement{
	PredefinedType: CurtainWallTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Door implements BuildingElement{
	OverallHeight: PositiveLengthMeasure!
	OverallWidth: PositiveLengthMeasure!
	PredefinedType: DoorTypeEnum!
	OperationType: DoorTypeOperationEnum!
	UserDefinedOperationType: Label!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Footing implements BuildingElement{
	PredefinedType: FootingTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Member implements BuildingElement{
	PredefinedType: MemberTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Pile implements BuildingElement{
	PredefinedType: PileTypeEnum!
	ConstructionType: PileConstructionEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Plate implements BuildingElement{
	PredefinedType: PlateTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Railing implements BuildingElement{
	PredefinedType: RailingTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Ramp implements BuildingElement{
	PredefinedType: RampTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RampFlight implements BuildingElement{
	PredefinedType: RampFlightTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Roof implements BuildingElement{
	PredefinedType: RoofTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ShadingDevice implements BuildingElement{
	PredefinedType: ShadingDeviceTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Slab implements BuildingElement{
	PredefinedType: SlabTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Stair implements BuildingElement{
	PredefinedType: StairTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StairFlight implements BuildingElement{
	NumberOfRisers: Integer!
	NumberOfTreads: Integer!
	RiserHeight: PositiveLengthMeasure!
	TreadLength: PositiveLengthMeasure!
	PredefinedType: StairFlightTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Wall implements BuildingElement{
	PredefinedType: WallTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Window implements BuildingElement{
	OverallHeight: PositiveLengthMeasure!
	OverallWidth: PositiveLengthMeasure!
	PredefinedType: WindowTypeEnum!
	PartitioningType: WindowTypePartitioningEnum!
	UserDefinedPartitioningType: Label!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface Element implements Product{
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type BuildingElementPart implements ElementComponent{
	PredefinedType: BuildingElementPartTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface ElementComponent implements Element{
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type BuildingElementPartType implements ElementComponentType{
	PredefinedType: BuildingElementPartTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface ElementComponentType implements ElementType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type BuildingElementProxyType implements BuildingElementType{
	PredefinedType: BuildingElementProxyTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ChimneyType implements BuildingElementType{
	PredefinedType: ChimneyTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ColumnType implements BuildingElementType{
	PredefinedType: ColumnTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CoveringType implements BuildingElementType{
	PredefinedType: CoveringTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CurtainWallType implements BuildingElementType{
	PredefinedType: CurtainWallTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DoorType implements BuildingElementType{
	PredefinedType: DoorTypeEnum
	OperationType: DoorTypeOperationEnum
	ParameterTakesPrecedence: Boolean!
	UserDefinedOperationType: Label!
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FootingType implements BuildingElementType{
	PredefinedType: FootingTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type MemberType implements BuildingElementType{
	PredefinedType: MemberTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type PileType implements BuildingElementType{
	PredefinedType: PileTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type PlateType implements BuildingElementType{
	PredefinedType: PlateTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RailingType implements BuildingElementType{
	PredefinedType: RailingTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RampFlightType implements BuildingElementType{
	PredefinedType: RampFlightTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RampType implements BuildingElementType{
	PredefinedType: RampTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RoofType implements BuildingElementType{
	PredefinedType: RoofTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ShadingDeviceType implements BuildingElementType{
	PredefinedType: ShadingDeviceTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SlabType implements BuildingElementType{
	PredefinedType: SlabTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StairFlightType implements BuildingElementType{
	PredefinedType: StairFlightTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StairType implements BuildingElementType{
	PredefinedType: StairTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type WallType implements BuildingElementType{
	PredefinedType: WallTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type WindowType implements BuildingElementType{
	PredefinedType: WindowTypeEnum
	PartitioningType: WindowTypePartitioningEnum
	ParameterTakesPrecedence: Boolean!
	UserDefinedPartitioningType: Label!
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface ElementType implements TypeProduct{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type BuildingStorey implements SpatialStructureElement{
	Elevation: LengthMeasure!
	CompositionType: ElementCompositionEnum!
	LongName: Label!
	ContainsElements: [RelContainedInSpatialStructure]
	ServicedBySystems: [RelServicesBuildings]
	ReferencesElements: [RelReferencedInSpatialStructure]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type BuildingSystem implements System{
	PredefinedType: BuildingSystemTypeEnum!
	LongName: Label!
	ServicesBuildings: [RelServicesBuildings]
	IsGroupedBy: [RelAssignsToGroup]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type System implements Group{
	ServicesBuildings: [RelServicesBuildings]
	IsGroupedBy: [RelAssignsToGroup]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Burner implements EnergyConversionDevice{
	PredefinedType: BurnerTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type BurnerType implements EnergyConversionDeviceType{
	PredefinedType: BurnerTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CShapeProfileDef implements ParameterizedProfileDef{
	Depth: PositiveLengthMeasure
	Width: PositiveLengthMeasure
	WallThickness: PositiveLengthMeasure
	Girth: PositiveLengthMeasure
	InternalFilletRadius: NonNegativeLengthMeasure!
	Position: Axis2Placement2D!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type CableCarrierFitting implements FlowFitting{
	PredefinedType: CableCarrierFittingTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FlowFitting implements DistributionFlowElement{
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CableCarrierFittingType implements FlowFittingType{
	PredefinedType: CableCarrierFittingTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface FlowFittingType implements DistributionFlowElementType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CableCarrierSegment implements FlowSegment{
	PredefinedType: CableCarrierSegmentTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FlowSegment implements DistributionFlowElement{
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CableCarrierSegmentType implements FlowSegmentType{
	PredefinedType: CableCarrierSegmentTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface FlowSegmentType implements DistributionFlowElementType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CableFitting implements FlowFitting{
	PredefinedType: CableFittingTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CableFittingType implements FlowFittingType{
	PredefinedType: CableFittingTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CableSegment implements FlowSegment{
	PredefinedType: CableSegmentTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CableSegmentType implements FlowSegmentType{
	PredefinedType: CableSegmentTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CartesianPoint implements Point{
	Coordinates: [LengthMeasure]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface Point implements GeometricRepresentationItem{
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface CartesianPointList implements GeometricRepresentationItem{
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type CartesianPointList2D implements CartesianPointList{
	CoordList: [[LengthMeasure]]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type CartesianPointList3D implements CartesianPointList{
	CoordList: [[LengthMeasure]]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface CartesianTransformationOperator implements GeometricRepresentationItem{
	Axis1: Direction!
	Axis2: Direction!
	LocalOrigin: CartesianPoint
	Scale: Real!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type CartesianTransformationOperator2D implements CartesianTransformationOperator{
	Axis1: Direction!
	Axis2: Direction!
	LocalOrigin: CartesianPoint
	Scale: Real!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type CartesianTransformationOperator3D implements CartesianTransformationOperator{
	Axis3: Direction!
	Axis1: Direction!
	Axis2: Direction!
	LocalOrigin: CartesianPoint
	Scale: Real!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type CartesianTransformationOperator2DnonUniform implements CartesianTransformationOperator2D{
	Scale2: Real!
	Axis1: Direction!
	Axis2: Direction!
	LocalOrigin: CartesianPoint
	Scale: Real!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type CartesianTransformationOperator3DnonUniform implements CartesianTransformationOperator3D{
	Scale2: Real!
	Scale3: Real!
	Axis3: Direction!
	Axis1: Direction!
	Axis2: Direction!
	LocalOrigin: CartesianPoint
	Scale: Real!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Chiller implements EnergyConversionDevice{
	PredefinedType: ChillerTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ChillerType implements EnergyConversionDeviceType{
	PredefinedType: ChillerTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Circle implements Conic{
	Radius: PositiveLengthMeasure
	Position: Axis2Placement
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface Conic implements Curve{
	Position: Axis2Placement
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type CircleHollowProfileDef implements CircleProfileDef{
	WallThickness: PositiveLengthMeasure
	Radius: PositiveLengthMeasure
	Position: Axis2Placement2D!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type CircleProfileDef implements ParameterizedProfileDef{
	Radius: PositiveLengthMeasure
	Position: Axis2Placement2D!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type CivilElement implements Element{
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CivilElementType implements ElementType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Classification implements ExternalInformation{
	Source: Label!
	Edition: Label!
	EditionDate: Date!
	Name: Label
	Description: Text!
	Location: URIReference!
	ReferenceTokens: [Identifier]!
	ClassificationForObjects: [RelAssociatesClassification]
	HasReferences: [ClassificationReference]
}
interface ExternalInformation{

}
type ClassificationReference implements ExternalReference{
	ReferencedSource: ClassificationReferenceSelect!
	Description: Text!
	Sort: Identifier!
	ClassificationRefForObjects: [RelAssociatesClassification]
	HasReferences: [ClassificationReference]
	Location: URIReference!
	Identification: Identifier!
	Name: Label!
	ExternalReferenceForResources: [ExternalReferenceRelationship]
}
interface ExternalReference{
	Location: URIReference!
	Identification: Identifier!
	Name: Label!
	ExternalReferenceForResources: [ExternalReferenceRelationship]
}
type ClosedShell implements ConnectedFaceSet{
	CfsFaces: [Face]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type ConnectedFaceSet implements TopologicalRepresentationItem{
	CfsFaces: [Face]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Coil implements EnergyConversionDevice{
	PredefinedType: CoilTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CoilType implements EnergyConversionDeviceType{
	PredefinedType: CoilTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ColourRgb implements ColourSpecification{
	Red: NormalisedRatioMeasure
	Green: NormalisedRatioMeasure
	Blue: NormalisedRatioMeasure
	Name: Label!
}
interface ColourSpecification implements PresentationItem{
	Name: Label!
}
type ColourRgbList implements PresentationItem{
	ColourList: [[NormalisedRatioMeasure]]
}
interface PresentationItem{

}
type ColumnStandardCase implements Column{
	PredefinedType: ColumnTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CommunicationsAppliance implements FlowTerminal{
	PredefinedType: CommunicationsApplianceTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CommunicationsApplianceType implements FlowTerminalType{
	PredefinedType: CommunicationsApplianceTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ComplexProperty implements Property{
	UsageName: Identifier
	HasProperties: [Property]
	Name: Identifier
	Description: Text!
	PartOfPset: [PropertySet]
	PropertyForDependance: [PropertyDependencyRelationship]
	PropertyDependsOn: [PropertyDependencyRelationship]
	PartOfComplex: [ComplexProperty]
	HasConstraints: [ResourceConstraintRelationship]
	HasApprovals: [ResourceApprovalRelationship]
	HasExternalReferences: [ExternalReferenceRelationship]
}
interface Property implements PropertyAbstraction{
	Name: Identifier
	Description: Text!
	PartOfPset: [PropertySet]
	PropertyForDependance: [PropertyDependencyRelationship]
	PropertyDependsOn: [PropertyDependencyRelationship]
	PartOfComplex: [ComplexProperty]
	HasConstraints: [ResourceConstraintRelationship]
	HasApprovals: [ResourceApprovalRelationship]
	HasExternalReferences: [ExternalReferenceRelationship]
}
type ComplexPropertyTemplate implements PropertyTemplate{
	UsageName: Label!
	TemplateType: ComplexPropertyTemplateTypeEnum!
	HasPropertyTemplates: [PropertyTemplate]!
	PartOfComplexTemplate: [ComplexPropertyTemplate]
	PartOfPsetTemplate: [PropertySetTemplate]
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface PropertyTemplate implements PropertyTemplateDefinition{
	PartOfComplexTemplate: [ComplexPropertyTemplate]
	PartOfPsetTemplate: [PropertySetTemplate]
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CompositeCurveSegment implements GeometricRepresentationItem{
	Transition: TransitionCode
	SameSense: Boolean
	ParentCurve: Curve
	UsingCurves: [CompositeCurve]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type ReparametrisedCompositeCurveSegment implements CompositeCurveSegment{
	ParamLength: ParameterValue
	Transition: TransitionCode
	SameSense: Boolean
	ParentCurve: Curve
	UsingCurves: [CompositeCurve]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type CompositeProfileDef implements ProfileDef{
	Profiles: [ProfileDef]
	Label: Label!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type Compressor implements FlowMovingDevice{
	PredefinedType: CompressorTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FlowMovingDevice implements DistributionFlowElement{
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CompressorType implements FlowMovingDeviceType{
	PredefinedType: CompressorTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface FlowMovingDeviceType implements DistributionFlowElementType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Condenser implements EnergyConversionDevice{
	PredefinedType: CondenserTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CondenserType implements EnergyConversionDeviceType{
	PredefinedType: CondenserTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Ellipse implements Conic{
	SemiAxis1: PositiveLengthMeasure
	SemiAxis2: PositiveLengthMeasure
	Position: Axis2Placement
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type OpenShell implements ConnectedFaceSet{
	CfsFaces: [Face]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface TopologicalRepresentationItem implements RepresentationItem{
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type ConnectionCurveGeometry implements ConnectionGeometry{
	CurveOnRelatingElement: CurveOrEdgeCurve
	CurveOnRelatedElement: CurveOrEdgeCurve!
}
interface ConnectionGeometry{

}
type ConnectionPointGeometry implements ConnectionGeometry{
	PointOnRelatingElement: PointOrVertexPoint
	PointOnRelatedElement: PointOrVertexPoint!
}
type ConnectionSurfaceGeometry implements ConnectionGeometry{
	SurfaceOnRelatingElement: SurfaceOrFaceSurface
	SurfaceOnRelatedElement: SurfaceOrFaceSurface!
}
type ConnectionVolumeGeometry implements ConnectionGeometry{
	VolumeOnRelatingElement: SolidOrShell
	VolumeOnRelatedElement: SolidOrShell!
}
type ConnectionPointEccentricity implements ConnectionPointGeometry{
	EccentricityInX: LengthMeasure!
	EccentricityInY: LengthMeasure!
	EccentricityInZ: LengthMeasure!
	PointOnRelatingElement: PointOrVertexPoint
	PointOnRelatedElement: PointOrVertexPoint!
}
interface Constraint{
	Name: Label
	Description: Text!
	ConstraintGrade: ConstraintEnum
	ConstraintSource: Label!
	CreatingActor: ActorSelect!
	CreationTime: DateTime!
	UserDefinedGrade: Label!
	HasExternalReferences: [ExternalReferenceRelationship]
	PropertiesForConstraint: [ResourceConstraintRelationship]
}
type Metric implements Constraint{
	Benchmark: BenchmarkEnum
	ValueSource: Label!
	DataValue: MetricValueSelect!
	ReferencePath: Reference!
	Name: Label
	Description: Text!
	ConstraintGrade: ConstraintEnum
	ConstraintSource: Label!
	CreatingActor: ActorSelect!
	CreationTime: DateTime!
	UserDefinedGrade: Label!
	HasExternalReferences: [ExternalReferenceRelationship]
	PropertiesForConstraint: [ResourceConstraintRelationship]
}
type Objective implements Constraint{
	BenchmarkValues: [Constraint]!
	LogicalAggregator: LogicalOperatorEnum!
	ObjectiveQualifier: ObjectiveEnum
	UserDefinedQualifier: Label!
	Name: Label
	Description: Text!
	ConstraintGrade: ConstraintEnum
	ConstraintSource: Label!
	CreatingActor: ActorSelect!
	CreationTime: DateTime!
	UserDefinedGrade: Label!
	HasExternalReferences: [ExternalReferenceRelationship]
	PropertiesForConstraint: [ResourceConstraintRelationship]
}
type ConstructionEquipmentResource implements ConstructionResource{
	PredefinedType: ConstructionEquipmentResourceTypeEnum!
	Usage: ResourceTime!
	BaseCosts: [AppliedValue]!
	BaseQuantity: PhysicalQuantity!
	Identification: Identifier!
	LongDescription: Text!
	ResourceOf: [RelAssignsToResource]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface ConstructionResource implements Resource{
	Usage: ResourceTime!
	BaseCosts: [AppliedValue]!
	BaseQuantity: PhysicalQuantity!
	Identification: Identifier!
	LongDescription: Text!
	ResourceOf: [RelAssignsToResource]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ConstructionEquipmentResourceType implements ConstructionResourceType{
	PredefinedType: ConstructionEquipmentResourceTypeEnum
	BaseCosts: [AppliedValue]!
	BaseQuantity: PhysicalQuantity!
	Identification: Identifier!
	LongDescription: Text!
	ResourceType: Label!
	ResourceOf: [RelAssignsToResource]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface ConstructionResourceType implements TypeResource{
	BaseCosts: [AppliedValue]!
	BaseQuantity: PhysicalQuantity!
	Identification: Identifier!
	LongDescription: Text!
	ResourceType: Label!
	ResourceOf: [RelAssignsToResource]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ConstructionMaterialResource implements ConstructionResource{
	PredefinedType: ConstructionMaterialResourceTypeEnum!
	Usage: ResourceTime!
	BaseCosts: [AppliedValue]!
	BaseQuantity: PhysicalQuantity!
	Identification: Identifier!
	LongDescription: Text!
	ResourceOf: [RelAssignsToResource]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ConstructionMaterialResourceType implements ConstructionResourceType{
	PredefinedType: ConstructionMaterialResourceTypeEnum
	BaseCosts: [AppliedValue]!
	BaseQuantity: PhysicalQuantity!
	Identification: Identifier!
	LongDescription: Text!
	ResourceType: Label!
	ResourceOf: [RelAssignsToResource]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ConstructionProductResource implements ConstructionResource{
	PredefinedType: ConstructionProductResourceTypeEnum!
	Usage: ResourceTime!
	BaseCosts: [AppliedValue]!
	BaseQuantity: PhysicalQuantity!
	Identification: Identifier!
	LongDescription: Text!
	ResourceOf: [RelAssignsToResource]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ConstructionProductResourceType implements ConstructionResourceType{
	PredefinedType: ConstructionProductResourceTypeEnum
	BaseCosts: [AppliedValue]!
	BaseQuantity: PhysicalQuantity!
	Identification: Identifier!
	LongDescription: Text!
	ResourceType: Label!
	ResourceOf: [RelAssignsToResource]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CrewResource implements ConstructionResource{
	PredefinedType: CrewResourceTypeEnum!
	Usage: ResourceTime!
	BaseCosts: [AppliedValue]!
	BaseQuantity: PhysicalQuantity!
	Identification: Identifier!
	LongDescription: Text!
	ResourceOf: [RelAssignsToResource]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type LaborResource implements ConstructionResource{
	PredefinedType: LaborResourceTypeEnum!
	Usage: ResourceTime!
	BaseCosts: [AppliedValue]!
	BaseQuantity: PhysicalQuantity!
	Identification: Identifier!
	LongDescription: Text!
	ResourceOf: [RelAssignsToResource]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SubContractResource implements ConstructionResource{
	PredefinedType: SubContractResourceTypeEnum!
	Usage: ResourceTime!
	BaseCosts: [AppliedValue]!
	BaseQuantity: PhysicalQuantity!
	Identification: Identifier!
	LongDescription: Text!
	ResourceOf: [RelAssignsToResource]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface Resource implements Object{
	Identification: Identifier!
	LongDescription: Text!
	ResourceOf: [RelAssignsToResource]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CrewResourceType implements ConstructionResourceType{
	PredefinedType: CrewResourceTypeEnum
	BaseCosts: [AppliedValue]!
	BaseQuantity: PhysicalQuantity!
	Identification: Identifier!
	LongDescription: Text!
	ResourceType: Label!
	ResourceOf: [RelAssignsToResource]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type LaborResourceType implements ConstructionResourceType{
	PredefinedType: LaborResourceTypeEnum
	BaseCosts: [AppliedValue]!
	BaseQuantity: PhysicalQuantity!
	Identification: Identifier!
	LongDescription: Text!
	ResourceType: Label!
	ResourceOf: [RelAssignsToResource]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SubContractResourceType implements ConstructionResourceType{
	PredefinedType: SubContractResourceTypeEnum
	BaseCosts: [AppliedValue]!
	BaseQuantity: PhysicalQuantity!
	Identification: Identifier!
	LongDescription: Text!
	ResourceType: Label!
	ResourceOf: [RelAssignsToResource]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface TypeResource implements TypeObject{
	Identification: Identifier!
	LongDescription: Text!
	ResourceType: Label!
	ResourceOf: [RelAssignsToResource]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface Context implements ObjectDefinition{
	ObjectType: Label!
	LongName: Label!
	Phase: Label!
	RepresentationContexts: [RepresentationContext]!
	UnitsInContext: UnitAssignment!
	IsDefinedBy: [RelDefinesByProperties]
	Declares: [RelDeclares]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Project implements Context{
	ObjectType: Label!
	LongName: Label!
	Phase: Label!
	RepresentationContexts: [RepresentationContext]!
	UnitsInContext: UnitAssignment!
	IsDefinedBy: [RelDefinesByProperties]
	Declares: [RelDeclares]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ProjectLibrary implements Context{
	ObjectType: Label!
	LongName: Label!
	Phase: Label!
	RepresentationContexts: [RepresentationContext]!
	UnitsInContext: UnitAssignment!
	IsDefinedBy: [RelDefinesByProperties]
	Declares: [RelDeclares]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface ObjectDefinition implements Root{
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ContextDependentUnit implements NamedUnit{
	Name: Label
	HasExternalReference: [ExternalReferenceRelationship]
	Dimensions: DimensionalExponents
	UnitType: UnitEnum
}
interface NamedUnit{
	Dimensions: DimensionalExponents
	UnitType: UnitEnum
}
type CostItem implements Control{
	PredefinedType: CostItemTypeEnum!
	CostValues: [CostValue]!
	CostQuantities: [PhysicalQuantity]!
	Identification: Identifier!
	Controls: [RelAssignsToControl]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CostSchedule implements Control{
	PredefinedType: CostScheduleTypeEnum!
	Status: Label!
	SubmittedOn: DateTime!
	UpdateDate: DateTime!
	Identification: Identifier!
	Controls: [RelAssignsToControl]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type PerformanceHistory implements Control{
	LifeCyclePhase: Label
	PredefinedType: PerformanceHistoryTypeEnum!
	Identification: Identifier!
	Controls: [RelAssignsToControl]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Permit implements Control{
	PredefinedType: PermitTypeEnum!
	Status: Label!
	LongDescription: Text!
	Identification: Identifier!
	Controls: [RelAssignsToControl]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ProjectOrder implements Control{
	PredefinedType: ProjectOrderTypeEnum!
	Status: Label!
	LongDescription: Text!
	Identification: Identifier!
	Controls: [RelAssignsToControl]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type WorkCalendar implements Control{
	WorkingTimes: [WorkTime]!
	ExceptionTimes: [WorkTime]!
	PredefinedType: WorkCalendarTypeEnum!
	Identification: Identifier!
	Controls: [RelAssignsToControl]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface WorkControl implements Control{
	CreationDate: DateTime
	Creators: [Person]!
	Purpose: Label!
	Duration: Duration!
	TotalFloat: Duration!
	StartTime: DateTime
	FinishTime: DateTime!
	Identification: Identifier!
	Controls: [RelAssignsToControl]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Controller implements DistributionControlElement{
	PredefinedType: ControllerTypeEnum!
	AssignedToFlowElement: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ControllerType implements DistributionControlElementType{
	PredefinedType: ControllerTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ConversionBasedUnit implements NamedUnit{
	Name: Label
	ConversionFactor: MeasureWithUnit
	HasExternalReference: [ExternalReferenceRelationship]
	Dimensions: DimensionalExponents
	UnitType: UnitEnum
}
type ConversionBasedUnitWithOffset implements ConversionBasedUnit{
	ConversionOffset: Real
	Name: Label
	ConversionFactor: MeasureWithUnit
	HasExternalReference: [ExternalReferenceRelationship]
	Dimensions: DimensionalExponents
	UnitType: UnitEnum
}
type CooledBeam implements EnergyConversionDevice{
	PredefinedType: CooledBeamTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CooledBeamType implements EnergyConversionDeviceType{
	PredefinedType: CooledBeamTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CoolingTower implements EnergyConversionDevice{
	PredefinedType: CoolingTowerTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type CoolingTowerType implements EnergyConversionDeviceType{
	PredefinedType: CoolingTowerTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface CoordinateOperation{
	SourceCRS: CoordinateReferenceSystemSelect
	TargetCRS: CoordinateReferenceSystem
}
type MapConversion implements CoordinateOperation{
	Eastings: LengthMeasure
	Northings: LengthMeasure
	OrthogonalHeight: LengthMeasure
	XAxisAbscissa: Real!
	XAxisOrdinate: Real!
	Scale: Real!
	SourceCRS: CoordinateReferenceSystemSelect
	TargetCRS: CoordinateReferenceSystem
}
interface CoordinateReferenceSystem{
	Name: Label
	Description: Text!
	GeodeticDatum: Identifier!
	VerticalDatum: Identifier!
	HasCoordinateOperation: [CoordinateOperation]
}
type ProjectedCRS implements CoordinateReferenceSystem{
	MapProjection: Identifier!
	MapZone: Identifier!
	MapUnit: NamedUnit!
	Name: Label
	Description: Text!
	GeodeticDatum: Identifier!
	VerticalDatum: Identifier!
	HasCoordinateOperation: [CoordinateOperation]
}
type RectangularPyramid implements CsgPrimitive3D{
	XLength: PositiveLengthMeasure
	YLength: PositiveLengthMeasure
	Height: PositiveLengthMeasure
	Position: Axis2Placement3D
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type RightCircularCone implements CsgPrimitive3D{
	Height: PositiveLengthMeasure
	BottomRadius: PositiveLengthMeasure
	Position: Axis2Placement3D
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type RightCircularCylinder implements CsgPrimitive3D{
	Height: PositiveLengthMeasure
	Radius: PositiveLengthMeasure
	Position: Axis2Placement3D
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Sphere implements CsgPrimitive3D{
	Radius: PositiveLengthMeasure
	Position: Axis2Placement3D
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type CsgSolid implements SolidModel{
	TreeRootExpression: CsgSelect
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface SolidModel implements GeometricRepresentationItem{
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type CurrencyRelationship implements ResourceLevelRelationship{
	RelatingMonetaryUnit: MonetaryUnit
	RelatedMonetaryUnit: MonetaryUnit
	ExchangeRate: PositiveRatioMeasure
	RateDateTime: DateTime!
	RateSource: LibraryInformation!
	Name: Label!
	Description: Text!
}
type Line implements Curve{
	Pnt: CartesianPoint
	Dir: Vector
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type OffsetCurve2D implements Curve{
	BasisCurve: Curve
	Distance: LengthMeasure
	SelfIntersect: Logical
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type OffsetCurve3D implements Curve{
	BasisCurve: Curve
	Distance: LengthMeasure
	SelfIntersect: Logical
	RefDirection: Direction
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Pcurve implements Curve{
	BasisSurface: Surface
	ReferenceCurve: Curve
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type SurfaceCurve implements Curve{
	Curve3D: Curve
	AssociatedGeometry: [Pcurve]
	MasterRepresentation: PreferredSurfaceCurveRepresentation
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type CurveStyle implements PresentationStyle{
	CurveFont: CurveFontOrScaledCurveFontSelect!
	CurveWidth: SizeSelect!
	CurveColour: Colour!
	ModelOrDraughting: Boolean!
	Name: Label!
}
interface PresentationStyle{
	Name: Label!
}
type CurveStyleFont implements PresentationItem{
	Name: Label!
	PatternList: [CurveStyleFontPattern]
}
type CurveStyleFontAndScaling implements PresentationItem{
	Name: Label!
	CurveFont: CurveStyleFontSelect
	CurveFontScaling: PositiveRatioMeasure
}
type CurveStyleFontPattern implements PresentationItem{
	VisibleSegmentLength: LengthMeasure
	InvisibleSegmentLength: PositiveLengthMeasure
}
type CylindricalSurface implements ElementarySurface{
	Radius: PositiveLengthMeasure
	Position: Axis2Placement3D
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface ElementarySurface implements Surface{
	Position: Axis2Placement3D
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Damper implements FlowController{
	PredefinedType: DamperTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DamperType implements FlowControllerType{
	PredefinedType: DamperTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DerivedProfileDef implements ProfileDef{
	ParentProfile: ProfileDef
	Operator: CartesianTransformationOperator2D
	Label: Label!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type MirroredProfileDef implements DerivedProfileDef{
	ParentProfile: ProfileDef
	Operator: CartesianTransformationOperator2D
	Label: Label!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type DerivedUnit{
	Elements: [DerivedUnitElement]
	UnitType: DerivedUnitEnum
	UserDefinedType: Label!
}
type DerivedUnitElement{
	Unit: NamedUnit
	Exponent: Int
}
type DimensionalExponents{
	LengthExponent: Int
	MassExponent: Int
	TimeExponent: Int
	ElectricCurrentExponent: Int
	ThermodynamicTemperatureExponent: Int
	AmountOfSubstanceExponent: Int
	LuminousIntensityExponent: Int
}
type Direction implements GeometricRepresentationItem{
	DirectionRatios: [Real]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type DiscreteAccessory implements ElementComponent{
	PredefinedType: DiscreteAccessoryTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DiscreteAccessoryType implements ElementComponentType{
	PredefinedType: DiscreteAccessoryTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DistributionChamberElement implements DistributionFlowElement{
	PredefinedType: DistributionChamberElementTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DistributionFlowElement implements DistributionElement{
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DistributionChamberElementType implements DistributionFlowElementType{
	PredefinedType: DistributionChamberElementTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface DistributionFlowElementType implements DistributionElementType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DistributionCircuit implements DistributionSystem{
	LongName: Label!
	PredefinedType: DistributionSystemEnum!
	ServicesBuildings: [RelServicesBuildings]
	IsGroupedBy: [RelAssignsToGroup]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DistributionSystem implements System{
	LongName: Label!
	PredefinedType: DistributionSystemEnum!
	ServicesBuildings: [RelServicesBuildings]
	IsGroupedBy: [RelAssignsToGroup]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FlowInstrument implements DistributionControlElement{
	PredefinedType: FlowInstrumentTypeEnum!
	AssignedToFlowElement: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ProtectiveDeviceTrippingUnit implements DistributionControlElement{
	PredefinedType: ProtectiveDeviceTrippingUnitTypeEnum!
	AssignedToFlowElement: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Sensor implements DistributionControlElement{
	PredefinedType: SensorTypeEnum!
	AssignedToFlowElement: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type UnitaryControlElement implements DistributionControlElement{
	PredefinedType: UnitaryControlElementTypeEnum!
	AssignedToFlowElement: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DistributionElement implements Element{
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FlowInstrumentType implements DistributionControlElementType{
	PredefinedType: FlowInstrumentTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ProtectiveDeviceTrippingUnitType implements DistributionControlElementType{
	PredefinedType: ProtectiveDeviceTrippingUnitTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SensorType implements DistributionControlElementType{
	PredefinedType: SensorTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type UnitaryControlElementType implements DistributionControlElementType{
	PredefinedType: UnitaryControlElementTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DistributionElementType implements ElementType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FlowStorageDevice implements DistributionFlowElement{
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FlowTreatmentDevice implements DistributionFlowElement{
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface FlowStorageDeviceType implements DistributionFlowElementType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface FlowTreatmentDeviceType implements DistributionFlowElementType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DistributionPort implements Port{
	FlowDirection: FlowDirectionEnum!
	PredefinedType: DistributionPortTypeEnum!
	SystemType: DistributionSystemEnum!
	ContainedIn: [RelConnectsPortToElement]
	ConnectedFrom: [RelConnectsPorts]
	ConnectedTo: [RelConnectsPorts]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface Port implements Product{
	ContainedIn: [RelConnectsPortToElement]
	ConnectedFrom: [RelConnectsPorts]
	ConnectedTo: [RelConnectsPorts]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DocumentInformation implements ExternalInformation{
	Identification: Identifier
	Name: Label
	Description: Text!
	Location: URIReference!
	Purpose: Text!
	IntendedUse: Text!
	Scope: Text!
	Revision: Label!
	DocumentOwner: ActorSelect!
	Editors: [ActorSelect]!
	CreationTime: DateTime!
	LastRevisionTime: DateTime!
	ElectronicFormat: Identifier!
	ValidFrom: Date!
	ValidUntil: Date!
	Confidentiality: DocumentConfidentialityEnum!
	Status: DocumentStatusEnum!
	DocumentInfoForObjects: [RelAssociatesDocument]
	HasDocumentReferences: [DocumentReference]
	IsPointedTo: [DocumentInformationRelationship]
	IsPointer: [DocumentInformationRelationship]
}
type DocumentInformationRelationship implements ResourceLevelRelationship{
	RelatingDocument: DocumentInformation
	RelatedDocuments: [DocumentInformation]
	RelationshipType: Label!
	Name: Label!
	Description: Text!
}
type DocumentReference implements ExternalReference{
	Description: Text!
	ReferencedDocument: DocumentInformation!
	DocumentRefForObjects: [RelAssociatesDocument]
	Location: URIReference!
	Identification: Identifier!
	Name: Label!
	ExternalReferenceForResources: [ExternalReferenceRelationship]
}
type DoorStandardCase implements Door{
	OverallHeight: PositiveLengthMeasure!
	OverallWidth: PositiveLengthMeasure!
	PredefinedType: DoorTypeEnum!
	OperationType: DoorTypeOperationEnum!
	UserDefinedOperationType: Label!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DoorLiningProperties implements PreDefinedPropertySet{
	LiningDepth: PositiveLengthMeasure!
	LiningThickness: NonNegativeLengthMeasure!
	ThresholdDepth: PositiveLengthMeasure!
	ThresholdThickness: NonNegativeLengthMeasure!
	TransomThickness: NonNegativeLengthMeasure!
	TransomOffset: LengthMeasure!
	LiningOffset: LengthMeasure!
	ThresholdOffset: LengthMeasure!
	CasingThickness: PositiveLengthMeasure!
	CasingDepth: PositiveLengthMeasure!
	ShapeAspectStyle: ShapeAspect!
	LiningToPanelOffsetX: LengthMeasure!
	LiningToPanelOffsetY: LengthMeasure!
	DefinesType: [TypeObject]
	IsDefinedBy: [RelDefinesByTemplate]
	DefinesOccurrence: [RelDefinesByProperties]
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface PreDefinedPropertySet implements PropertySetDefinition{
	DefinesType: [TypeObject]
	IsDefinedBy: [RelDefinesByTemplate]
	DefinesOccurrence: [RelDefinesByProperties]
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DoorPanelProperties implements PreDefinedPropertySet{
	PanelDepth: PositiveLengthMeasure!
	PanelOperation: DoorPanelOperationEnum
	PanelWidth: NormalisedRatioMeasure!
	PanelPosition: DoorPanelPositionEnum
	ShapeAspectStyle: ShapeAspect!
	DefinesType: [TypeObject]
	IsDefinedBy: [RelDefinesByTemplate]
	DefinesOccurrence: [RelDefinesByProperties]
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DoorStyle implements TypeProduct{
	OperationType: DoorStyleOperationEnum
	ConstructionType: DoorStyleConstructionEnum
	ParameterTakesPrecedence: Boolean
	Sizeable: Boolean
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type TypeProduct implements TypeObject{
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DraughtingPreDefinedColour implements PreDefinedColour{
	Name: Label
}
interface PreDefinedColour implements PreDefinedItem{
	Name: Label
}
type DraughtingPreDefinedCurveFont implements PreDefinedCurveFont{
	Name: Label
}
interface PreDefinedCurveFont implements PreDefinedItem{
	Name: Label
}
type DuctFitting implements FlowFitting{
	PredefinedType: DuctFittingTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DuctFittingType implements FlowFittingType{
	PredefinedType: DuctFittingTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DuctSegment implements FlowSegment{
	PredefinedType: DuctSegmentTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DuctSegmentType implements FlowSegmentType{
	PredefinedType: DuctSegmentTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DuctSilencer implements FlowTreatmentDevice{
	PredefinedType: DuctSilencerTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type DuctSilencerType implements FlowTreatmentDeviceType{
	PredefinedType: DuctSilencerTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Edge implements TopologicalRepresentationItem{
	EdgeStart: Vertex
	EdgeEnd: Vertex
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type EdgeCurve implements Edge{
	EdgeGeometry: Curve
	SameSense: Boolean
	EdgeStart: Vertex
	EdgeEnd: Vertex
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type OrientedEdge implements Edge{
	EdgeElement: Edge
	Orientation: Boolean
	EdgeStart: Vertex
	EdgeEnd: Vertex
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Subedge implements Edge{
	ParentEdge: Edge
	EdgeStart: Vertex
	EdgeEnd: Vertex
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type EdgeLoop implements Loop{
	EdgeList: [OrientedEdge]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Loop implements TopologicalRepresentationItem{
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type ElectricAppliance implements FlowTerminal{
	PredefinedType: ElectricApplianceTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ElectricApplianceType implements FlowTerminalType{
	PredefinedType: ElectricApplianceTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ElectricDistributionBoard implements FlowController{
	PredefinedType: ElectricDistributionBoardTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ElectricDistributionBoardType implements FlowControllerType{
	PredefinedType: ElectricDistributionBoardTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ElectricFlowStorageDevice implements FlowStorageDevice{
	PredefinedType: ElectricFlowStorageDeviceTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ElectricFlowStorageDeviceType implements FlowStorageDeviceType{
	PredefinedType: ElectricFlowStorageDeviceTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ElectricGenerator implements EnergyConversionDevice{
	PredefinedType: ElectricGeneratorTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ElectricGeneratorType implements EnergyConversionDeviceType{
	PredefinedType: ElectricGeneratorTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ElectricMotor implements EnergyConversionDevice{
	PredefinedType: ElectricMotorTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ElectricMotorType implements EnergyConversionDeviceType{
	PredefinedType: ElectricMotorTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ElectricTimeControl implements FlowController{
	PredefinedType: ElectricTimeControlTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ElectricTimeControlType implements FlowControllerType{
	PredefinedType: ElectricTimeControlTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ElementAssembly implements Element{
	AssemblyPlace: AssemblyPlaceEnum!
	PredefinedType: ElementAssemblyTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface FeatureElement implements Element{
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FurnishingElement implements Element{
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type GeographicElement implements Element{
	PredefinedType: GeographicElementTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type TransportElement implements Element{
	PredefinedType: TransportElementTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type VirtualElement implements Element{
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ElementAssemblyType implements ElementType{
	PredefinedType: ElementAssemblyTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Fastener implements ElementComponent{
	PredefinedType: FastenerTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type MechanicalFastener implements ElementComponent{
	NominalDiameter: PositiveLengthMeasure!
	NominalLength: PositiveLengthMeasure!
	PredefinedType: MechanicalFastenerTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface ReinforcingElement implements ElementComponent{
	SteelGrade: Label!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type VibrationIsolator implements ElementComponent{
	PredefinedType: VibrationIsolatorTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FastenerType implements ElementComponentType{
	PredefinedType: FastenerTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type MechanicalFastenerType implements ElementComponentType{
	PredefinedType: MechanicalFastenerTypeEnum
	NominalDiameter: PositiveLengthMeasure!
	NominalLength: PositiveLengthMeasure!
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface ReinforcingElementType implements ElementComponentType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type VibrationIsolatorType implements ElementComponentType{
	PredefinedType: VibrationIsolatorTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ElementQuantity implements QuantitySet{
	MethodOfMeasurement: Label!
	Quantities: [PhysicalQuantity]
	DefinesType: [TypeObject]
	IsDefinedBy: [RelDefinesByTemplate]
	DefinesOccurrence: [RelDefinesByProperties]
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface QuantitySet implements PropertySetDefinition{
	DefinesType: [TypeObject]
	IsDefinedBy: [RelDefinesByTemplate]
	DefinesOccurrence: [RelDefinesByProperties]
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FurnishingElementType implements ElementType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type GeographicElementType implements ElementType{
	PredefinedType: GeographicElementTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type TransportElementType implements ElementType{
	PredefinedType: TransportElementTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Plane implements ElementarySurface{
	Position: Axis2Placement3D
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type SphericalSurface implements ElementarySurface{
	Radius: PositiveLengthMeasure
	Position: Axis2Placement3D
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type ToroidalSurface implements ElementarySurface{
	MajorRadius: PositiveLengthMeasure
	MinorRadius: PositiveLengthMeasure
	Position: Axis2Placement3D
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type EllipseProfileDef implements ParameterizedProfileDef{
	SemiAxis1: PositiveLengthMeasure
	SemiAxis2: PositiveLengthMeasure
	Position: Axis2Placement2D!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type Engine implements EnergyConversionDevice{
	PredefinedType: EngineTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type EvaporativeCooler implements EnergyConversionDevice{
	PredefinedType: EvaporativeCoolerTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Evaporator implements EnergyConversionDevice{
	PredefinedType: EvaporatorTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type HeatExchanger implements EnergyConversionDevice{
	PredefinedType: HeatExchangerTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Humidifier implements EnergyConversionDevice{
	PredefinedType: HumidifierTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type MotorConnection implements EnergyConversionDevice{
	PredefinedType: MotorConnectionTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SolarDevice implements EnergyConversionDevice{
	PredefinedType: SolarDeviceTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Transformer implements EnergyConversionDevice{
	PredefinedType: TransformerTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type TubeBundle implements EnergyConversionDevice{
	PredefinedType: TubeBundleTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type UnitaryEquipment implements EnergyConversionDevice{
	PredefinedType: UnitaryEquipmentTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type EngineType implements EnergyConversionDeviceType{
	PredefinedType: EngineTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type EvaporativeCoolerType implements EnergyConversionDeviceType{
	PredefinedType: EvaporativeCoolerTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type EvaporatorType implements EnergyConversionDeviceType{
	PredefinedType: EvaporatorTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type HeatExchangerType implements EnergyConversionDeviceType{
	PredefinedType: HeatExchangerTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type HumidifierType implements EnergyConversionDeviceType{
	PredefinedType: HumidifierTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type MotorConnectionType implements EnergyConversionDeviceType{
	PredefinedType: MotorConnectionTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SolarDeviceType implements EnergyConversionDeviceType{
	PredefinedType: SolarDeviceTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type TransformerType implements EnergyConversionDeviceType{
	PredefinedType: TransformerTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type TubeBundleType implements EnergyConversionDeviceType{
	PredefinedType: TubeBundleTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type UnitaryEquipmentType implements EnergyConversionDeviceType{
	PredefinedType: UnitaryEquipmentTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Event implements Process{
	PredefinedType: EventTypeEnum!
	EventTriggerType: EventTriggerTypeEnum!
	UserDefinedEventTriggerType: Label!
	EventOccurenceTime: EventTime!
	Identification: Identifier!
	LongDescription: Text!
	IsPredecessorTo: [RelSequence]
	IsSuccessorFrom: [RelSequence]
	OperatesOn: [RelAssignsToProcess]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface Process implements Object{
	Identification: Identifier!
	LongDescription: Text!
	IsPredecessorTo: [RelSequence]
	IsSuccessorFrom: [RelSequence]
	OperatesOn: [RelAssignsToProcess]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type EventTime implements SchedulingTime{
	ActualDate: DateTime!
	EarlyDate: DateTime!
	LateDate: DateTime!
	ScheduleDate: DateTime!
	Name: Label!
	DataOrigin: DataOriginEnum!
	UserDefinedDataOrigin: Label!
}
interface SchedulingTime{
	Name: Label!
	DataOrigin: DataOriginEnum!
	UserDefinedDataOrigin: Label!
}
type EventType implements TypeProcess{
	PredefinedType: EventTypeEnum
	EventTriggerType: EventTriggerTypeEnum
	UserDefinedEventTriggerType: Label!
	Identification: Identifier!
	LongDescription: Text!
	ProcessType: Label!
	OperatesOn: [RelAssignsToProcess]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface TypeProcess implements TypeObject{
	Identification: Identifier!
	LongDescription: Text!
	ProcessType: Label!
	OperatesOn: [RelAssignsToProcess]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface ExtendedProperties implements PropertyAbstraction{
	Name: Identifier!
	Description: Text!
	Properties: [Property]
	HasExternalReferences: [ExternalReferenceRelationship]
}
type MaterialProperties implements ExtendedProperties{
	Material: MaterialDefinition
	Name: Identifier!
	Description: Text!
	Properties: [Property]
	HasExternalReferences: [ExternalReferenceRelationship]
}
type ProfileProperties implements ExtendedProperties{
	ProfileDefinition: ProfileDef
	Name: Identifier!
	Description: Text!
	Properties: [Property]
	HasExternalReferences: [ExternalReferenceRelationship]
}
interface PropertyAbstraction{
	HasExternalReferences: [ExternalReferenceRelationship]
}
type LibraryInformation implements ExternalInformation{
	Name: Label
	Version: Label!
	Publisher: ActorSelect!
	VersionDate: DateTime!
	Location: URIReference!
	Description: Text!
	LibraryInfoForObjects: [RelAssociatesLibrary]
	HasLibraryReferences: [LibraryReference]
}
type ExternallyDefinedHatchStyle implements ExternalReference{
	Location: URIReference!
	Identification: Identifier!
	Name: Label!
	ExternalReferenceForResources: [ExternalReferenceRelationship]
}
type ExternallyDefinedSurfaceStyle implements ExternalReference{
	Location: URIReference!
	Identification: Identifier!
	Name: Label!
	ExternalReferenceForResources: [ExternalReferenceRelationship]
}
type ExternallyDefinedTextFont implements ExternalReference{
	Location: URIReference!
	Identification: Identifier!
	Name: Label!
	ExternalReferenceForResources: [ExternalReferenceRelationship]
}
type LibraryReference implements ExternalReference{
	Description: Text!
	Language: LanguageId!
	ReferencedLibrary: LibraryInformation!
	LibraryRefForObjects: [RelAssociatesLibrary]
	Location: URIReference!
	Identification: Identifier!
	Name: Label!
	ExternalReferenceForResources: [ExternalReferenceRelationship]
}
type ExternalReferenceRelationship implements ResourceLevelRelationship{
	RelatingReference: ExternalReference
	RelatedResourceObjects: [ResourceObjectSelect]
	Name: Label!
	Description: Text!
}
type ExternalSpatialElement implements ExternalSpatialStructureElement{
	PredefinedType: ExternalSpatialElementTypeEnum!
	BoundedBy: [RelSpaceBoundary]
	LongName: Label!
	ContainsElements: [RelContainedInSpatialStructure]
	ServicedBySystems: [RelServicesBuildings]
	ReferencesElements: [RelReferencedInSpatialStructure]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface ExternalSpatialStructureElement implements SpatialElement{
	LongName: Label!
	ContainsElements: [RelContainedInSpatialStructure]
	ServicedBySystems: [RelServicesBuildings]
	ReferencesElements: [RelReferencedInSpatialStructure]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface SpatialElement implements Product{
	LongName: Label!
	ContainsElements: [RelContainedInSpatialStructure]
	ServicedBySystems: [RelServicesBuildings]
	ReferencesElements: [RelReferencedInSpatialStructure]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ExtrudedAreaSolid implements SweptAreaSolid{
	ExtrudedDirection: Direction
	Depth: PositiveLengthMeasure
	SweptArea: ProfileDef
	Position: Axis2Placement3D!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type ExtrudedAreaSolidTapered implements ExtrudedAreaSolid{
	EndSweptArea: ProfileDef
	ExtrudedDirection: Direction
	Depth: PositiveLengthMeasure
	SweptArea: ProfileDef
	Position: Axis2Placement3D!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface SweptAreaSolid implements SolidModel{
	SweptArea: ProfileDef
	Position: Axis2Placement3D!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Face implements TopologicalRepresentationItem{
	Bounds: [FaceBound]
	HasTextureMaps: [TextureMap]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type FaceBasedSurfaceModel implements GeometricRepresentationItem{
	FbsmFaces: [ConnectedFaceSet]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type FaceBound implements TopologicalRepresentationItem{
	Bound: Loop
	Orientation: Boolean
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type FaceOuterBound implements FaceBound{
	Bound: Loop
	Orientation: Boolean
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type FacetedBrep implements ManifoldSolidBrep{
	Outer: ClosedShell
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type FacetedBrepWithVoids implements FacetedBrep{
	Voids: [ClosedShell]
	Outer: ClosedShell
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type FailureConnectionCondition implements StructuralConnectionCondition{
	TensionFailureX: ForceMeasure!
	TensionFailureY: ForceMeasure!
	TensionFailureZ: ForceMeasure!
	CompressionFailureX: ForceMeasure!
	CompressionFailureY: ForceMeasure!
	CompressionFailureZ: ForceMeasure!
	Name: Label!
}
interface StructuralConnectionCondition{
	Name: Label!
}
type Fan implements FlowMovingDevice{
	PredefinedType: FanTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FanType implements FlowMovingDeviceType{
	PredefinedType: FanTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface FeatureElementAddition implements FeatureElement{
	ProjectsElements: RelProjectsElement
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface FeatureElementSubtraction implements FeatureElement{
	VoidsElements: RelVoidsElement
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SurfaceFeature implements FeatureElement{
	PredefinedType: SurfaceFeatureTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ProjectionElement implements FeatureElementAddition{
	PredefinedType: ProjectionElementTypeEnum!
	ProjectsElements: RelProjectsElement
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type OpeningElement implements FeatureElementSubtraction{
	PredefinedType: OpeningElementTypeEnum!
	HasFillings: [RelFillsElement]
	VoidsElements: RelVoidsElement
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type VoidingFeature implements FeatureElementSubtraction{
	PredefinedType: VoidingFeatureTypeEnum!
	VoidsElements: RelVoidsElement
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FillAreaStyle implements PresentationStyle{
	FillStyles: [FillStyleSelect]
	ModelorDraughting: Boolean!
	Name: Label!
}
type FillAreaStyleHatching implements GeometricRepresentationItem{
	HatchLineAppearance: CurveStyle
	StartOfNextHatchLine: HatchLineDistanceSelect
	PointOfReferenceHatchLine: CartesianPoint!
	PatternStart: CartesianPoint!
	HatchLineAngle: PlaneAngleMeasure
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type FillAreaStyleTiles implements GeometricRepresentationItem{
	TilingPattern: [Vector]
	Tiles: [StyledItem]
	TilingScale: PositiveRatioMeasure
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Filter implements FlowTreatmentDevice{
	PredefinedType: FilterTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FilterType implements FlowTreatmentDeviceType{
	PredefinedType: FilterTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FireSuppressionTerminal implements FlowTerminal{
	PredefinedType: FireSuppressionTerminalTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FireSuppressionTerminalType implements FlowTerminalType{
	PredefinedType: FireSuppressionTerminalTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FixedReferenceSweptAreaSolid implements SweptAreaSolid{
	Directrix: Curve
	StartParam: ParameterValue!
	EndParam: ParameterValue!
	FixedReference: Direction
	SweptArea: ProfileDef
	Position: Axis2Placement3D!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type FlowMeter implements FlowController{
	PredefinedType: FlowMeterTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ProtectiveDevice implements FlowController{
	PredefinedType: ProtectiveDeviceTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SwitchingDevice implements FlowController{
	PredefinedType: SwitchingDeviceTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Valve implements FlowController{
	PredefinedType: ValveTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FlowMeterType implements FlowControllerType{
	PredefinedType: FlowMeterTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ProtectiveDeviceType implements FlowControllerType{
	PredefinedType: ProtectiveDeviceTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SwitchingDeviceType implements FlowControllerType{
	PredefinedType: SwitchingDeviceTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ValveType implements FlowControllerType{
	PredefinedType: ValveTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type JunctionBox implements FlowFitting{
	PredefinedType: JunctionBoxTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type PipeFitting implements FlowFitting{
	PredefinedType: PipeFittingTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type JunctionBoxType implements FlowFittingType{
	PredefinedType: JunctionBoxTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type PipeFittingType implements FlowFittingType{
	PredefinedType: PipeFittingTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Pump implements FlowMovingDevice{
	PredefinedType: PumpTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type PumpType implements FlowMovingDeviceType{
	PredefinedType: PumpTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type PipeSegment implements FlowSegment{
	PredefinedType: PipeSegmentTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type PipeSegmentType implements FlowSegmentType{
	PredefinedType: PipeSegmentTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Tank implements FlowStorageDevice{
	PredefinedType: TankTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type TankType implements FlowStorageDeviceType{
	PredefinedType: TankTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Lamp implements FlowTerminal{
	PredefinedType: LampTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type LightFixture implements FlowTerminal{
	PredefinedType: LightFixtureTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type MedicalDevice implements FlowTerminal{
	PredefinedType: MedicalDeviceTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Outlet implements FlowTerminal{
	PredefinedType: OutletTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SanitaryTerminal implements FlowTerminal{
	PredefinedType: SanitaryTerminalTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SpaceHeater implements FlowTerminal{
	PredefinedType: SpaceHeaterTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StackTerminal implements FlowTerminal{
	PredefinedType: StackTerminalTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type WasteTerminal implements FlowTerminal{
	PredefinedType: WasteTerminalTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type LampType implements FlowTerminalType{
	PredefinedType: LampTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type LightFixtureType implements FlowTerminalType{
	PredefinedType: LightFixtureTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type MedicalDeviceType implements FlowTerminalType{
	PredefinedType: MedicalDeviceTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type OutletType implements FlowTerminalType{
	PredefinedType: OutletTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SanitaryTerminalType implements FlowTerminalType{
	PredefinedType: SanitaryTerminalTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SpaceHeaterType implements FlowTerminalType{
	PredefinedType: SpaceHeaterTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StackTerminalType implements FlowTerminalType{
	PredefinedType: StackTerminalTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type WasteTerminalType implements FlowTerminalType{
	PredefinedType: WasteTerminalTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Interceptor implements FlowTreatmentDevice{
	PredefinedType: InterceptorTypeEnum!
	HasControlElements: [RelFlowControlElements]
	HasPorts: [RelConnectsPortToElement]
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type InterceptorType implements FlowTreatmentDeviceType{
	PredefinedType: InterceptorTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Furniture implements FurnishingElement{
	PredefinedType: FurnitureTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SystemFurnitureElement implements FurnishingElement{
	PredefinedType: SystemFurnitureElementTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type FurnitureType implements FurnishingElementType{
	AssemblyPlace: AssemblyPlaceEnum
	PredefinedType: FurnitureTypeEnum!
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SystemFurnitureElementType implements FurnishingElementType{
	PredefinedType: SystemFurnitureElementTypeEnum!
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type GeometricCurveSet implements GeometricSet{
	Elements: [GeometricSetSelect]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type GeometricSet implements GeometricRepresentationItem{
	Elements: [GeometricSetSelect]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type GeometricRepresentationContext implements RepresentationContext{
	CoordinateSpaceDimension: DimensionCount
	Precision: Real!
	WorldCoordinateSystem: Axis2Placement
	TrueNorth: Direction!
	HasSubContexts: [GeometricRepresentationSubContext]
	HasCoordinateOperation: [CoordinateOperation]
	ContextIdentifier: Label!
	ContextType: Label!
	RepresentationsInContext: [Representation]
}
type GeometricRepresentationSubContext implements GeometricRepresentationContext{
	ParentContext: GeometricRepresentationContext
	TargetScale: PositiveRatioMeasure!
	TargetView: GeometricProjectionEnum
	UserDefinedTargetView: Label!
	CoordinateSpaceDimension: DimensionCount
	Precision: Real!
	WorldCoordinateSystem: Axis2Placement
	TrueNorth: Direction!
	HasSubContexts: [GeometricRepresentationSubContext]
	HasCoordinateOperation: [CoordinateOperation]
	ContextIdentifier: Label!
	ContextType: Label!
	RepresentationsInContext: [Representation]
}
interface RepresentationContext{
	ContextIdentifier: Label!
	ContextType: Label!
	RepresentationsInContext: [Representation]
}
interface LightSource implements GeometricRepresentationItem{
	Name: Label!
	LightColour: ColourRgb
	AmbientIntensity: NormalisedRatioMeasure!
	Intensity: NormalisedRatioMeasure!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type PlanarExtent implements GeometricRepresentationItem{
	SizeInX: LengthMeasure
	SizeInY: LengthMeasure
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type SectionedSpine implements GeometricRepresentationItem{
	SpineCurve: CompositeCurve
	CrossSections: [ProfileDef]
	CrossSectionPositions: [Axis2Placement3D]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type ShellBasedSurfaceModel implements GeometricRepresentationItem{
	SbsmBoundary: [Shell]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface TessellatedItem implements GeometricRepresentationItem{
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type TextLiteral implements GeometricRepresentationItem{
	Literal: PresentableText
	Placement: Axis2Placement
	Path: TextPath
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Vector implements GeometricRepresentationItem{
	Orientation: Direction
	Magnitude: LengthMeasure
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface RepresentationItem{
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Grid implements Product{
	UAxes: [GridAxis]
	VAxes: [GridAxis]
	WAxes: [GridAxis]!
	PredefinedType: GridTypeEnum!
	ContainedInStructure: [RelContainedInSpatialStructure]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type GridAxis{
	AxisTag: Label!
	AxisCurve: Curve
	SameSense: Boolean
	PartOfW: [Grid]
	PartOfV: [Grid]
	PartOfU: [Grid]
	HasIntersections: [VirtualGridIntersection]
}
type GridPlacement implements ObjectPlacement{
	PlacementLocation: VirtualGridIntersection
	PlacementRefDirection: GridPlacementDirectionSelect!
	PlacesObject: [Product]
	ReferencedByPlacements: [LocalPlacement]
}
interface ObjectPlacement{
	PlacesObject: [Product]
	ReferencedByPlacements: [LocalPlacement]
}
type Inventory implements Group{
	PredefinedType: InventoryTypeEnum!
	Jurisdiction: ActorSelect!
	ResponsiblePersons: [Person]!
	LastUpdateDate: Date!
	CurrentValue: CostValue!
	OriginalValue: CostValue!
	IsGroupedBy: [RelAssignsToGroup]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralLoadGroup implements Group{
	PredefinedType: LoadGroupTypeEnum
	ActionType: ActionTypeEnum
	ActionSource: ActionSourceTypeEnum
	Coefficient: RatioMeasure!
	Purpose: Label!
	SourceOfResultGroup: [StructuralResultGroup]
	LoadGroupFor: [StructuralAnalysisModel]
	IsGroupedBy: [RelAssignsToGroup]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralResultGroup implements Group{
	TheoryType: AnalysisTheoryTypeEnum
	ResultForLoadGroup: StructuralLoadGroup!
	IsLinear: Boolean
	ResultGroupFor: [StructuralAnalysisModel]
	IsGroupedBy: [RelAssignsToGroup]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type PolygonalBoundedHalfSpace implements HalfSpaceSolid{
	Position: Axis2Placement3D
	PolygonalBoundary: BoundedCurve
	BaseSurface: Surface
	AgreementFlag: Boolean
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type IShapeProfileDef implements ParameterizedProfileDef{
	OverallWidth: PositiveLengthMeasure
	OverallDepth: PositiveLengthMeasure
	WebThickness: PositiveLengthMeasure
	FlangeThickness: PositiveLengthMeasure
	FilletRadius: NonNegativeLengthMeasure!
	FlangeEdgeRadius: NonNegativeLengthMeasure!
	FlangeSlope: PlaneAngleMeasure!
	Position: Axis2Placement2D!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type ImageTexture implements SurfaceTexture{
	URLReference: URIReference
	RepeatS: Boolean
	RepeatT: Boolean
	Mode: Identifier!
	TextureTransform: CartesianTransformationOperator2D!
	Parameter: [Identifier]!
	IsMappedBy: [TextureCoordinate]
	UsedInStyles: [SurfaceStyleWithTextures]
}
type IndexedColourMap implements PresentationItem{
	MappedTo: TessellatedFaceSet
	Opacity: NormalisedRatioMeasure!
	Colours: ColourRgbList
	ColourIndex: [PositiveInteger]
}
type IndexedPolygonalFace implements TessellatedItem{
	CoordIndex: [PositiveInteger]
	ToFaceSet: [PolygonalFaceSet]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type IndexedPolygonalFaceWithVoids implements IndexedPolygonalFace{
	InnerCoordIndices: [[PositiveInteger]]
	CoordIndex: [PositiveInteger]
	ToFaceSet: [PolygonalFaceSet]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface IndexedTextureMap implements TextureCoordinate{
	MappedTo: TessellatedFaceSet
	TexCoords: TextureVertexList
	Maps: [SurfaceTexture]
}
type IndexedTriangleTextureMap implements IndexedTextureMap{
	TexCoordIndex: [[PositiveInteger]]!
	MappedTo: TessellatedFaceSet
	TexCoords: TextureVertexList
	Maps: [SurfaceTexture]
}
interface TextureCoordinate implements PresentationItem{
	Maps: [SurfaceTexture]
}
type IntersectionCurve implements SurfaceCurve{
	Curve3D: Curve
	AssociatedGeometry: [Pcurve]
	MasterRepresentation: PreferredSurfaceCurveRepresentation
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type IrregularTimeSeries implements TimeSeries{
	Values: [IrregularTimeSeriesValue]
	Name: Label
	Description: Text!
	StartTime: DateTime
	EndTime: DateTime
	TimeSeriesDataType: TimeSeriesDataTypeEnum
	DataOrigin: DataOriginEnum
	UserDefinedDataOrigin: Label!
	Unit: Unit!
	HasExternalReference: [ExternalReferenceRelationship]
}
interface TimeSeries{
	Name: Label
	Description: Text!
	StartTime: DateTime
	EndTime: DateTime
	TimeSeriesDataType: TimeSeriesDataTypeEnum
	DataOrigin: DataOriginEnum
	UserDefinedDataOrigin: Label!
	Unit: Unit!
	HasExternalReference: [ExternalReferenceRelationship]
}
type IrregularTimeSeriesValue{
	TimeStamp: DateTime
	ListValues: [Value]
}
type LShapeProfileDef implements ParameterizedProfileDef{
	Depth: PositiveLengthMeasure
	Width: PositiveLengthMeasure!
	Thickness: PositiveLengthMeasure
	FilletRadius: NonNegativeLengthMeasure!
	EdgeRadius: NonNegativeLengthMeasure!
	LegSlope: PlaneAngleMeasure!
	Position: Axis2Placement2D!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type LagTime implements SchedulingTime{
	LagValue: TimeOrRatioSelect
	DurationType: TaskDurationEnum
	Name: Label!
	DataOrigin: DataOriginEnum!
	UserDefinedDataOrigin: Label!
}
type LightDistributionData{
	MainPlaneAngle: PlaneAngleMeasure
	SecondaryPlaneAngle: [PlaneAngleMeasure]
	LuminousIntensity: [LuminousIntensityDistributionMeasure]
}
type LightIntensityDistribution{
	LightDistributionCurve: LightDistributionCurveEnum
	DistributionData: [LightDistributionData]
}
type LightSourceAmbient implements LightSource{
	Name: Label!
	LightColour: ColourRgb
	AmbientIntensity: NormalisedRatioMeasure!
	Intensity: NormalisedRatioMeasure!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type LightSourceDirectional implements LightSource{
	Orientation: Direction
	Name: Label!
	LightColour: ColourRgb
	AmbientIntensity: NormalisedRatioMeasure!
	Intensity: NormalisedRatioMeasure!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type LightSourceGoniometric implements LightSource{
	Position: Axis2Placement3D
	ColourAppearance: ColourRgb!
	ColourTemperature: ThermodynamicTemperatureMeasure
	LuminousFlux: LuminousFluxMeasure
	LightEmissionSource: LightEmissionSourceEnum
	LightDistributionDataSource: LightDistributionDataSourceSelect
	Name: Label!
	LightColour: ColourRgb
	AmbientIntensity: NormalisedRatioMeasure!
	Intensity: NormalisedRatioMeasure!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type LightSourcePositional implements LightSource{
	Position: CartesianPoint
	Radius: PositiveLengthMeasure
	ConstantAttenuation: Real
	DistanceAttenuation: Real
	QuadricAttenuation: Real
	Name: Label!
	LightColour: ColourRgb
	AmbientIntensity: NormalisedRatioMeasure!
	Intensity: NormalisedRatioMeasure!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type LightSourceSpot implements LightSourcePositional{
	Orientation: Direction
	ConcentrationExponent: Real!
	SpreadAngle: PositivePlaneAngleMeasure
	BeamWidthAngle: PositivePlaneAngleMeasure
	Position: CartesianPoint
	Radius: PositiveLengthMeasure
	ConstantAttenuation: Real
	DistanceAttenuation: Real
	QuadricAttenuation: Real
	Name: Label!
	LightColour: ColourRgb
	AmbientIntensity: NormalisedRatioMeasure!
	Intensity: NormalisedRatioMeasure!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type LocalPlacement implements ObjectPlacement{
	PlacementRelTo: ObjectPlacement!
	RelativePlacement: Axis2Placement
	PlacesObject: [Product]
	ReferencedByPlacements: [LocalPlacement]
}
type PolyLoop implements Loop{
	Polygon: [CartesianPoint]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type VertexLoop implements Loop{
	LoopVertex: Vertex
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type MappedItem implements RepresentationItem{
	MappingSource: RepresentationMap
	MappingTarget: CartesianTransformationOperator
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Material implements MaterialDefinition{
	Name: Label
	Description: Text!
	Category: Label!
	HasRepresentation: [MaterialDefinitionRepresentation]
	IsRelatedWith: [MaterialRelationship]
	RelatesTo: [MaterialRelationship]
	AssociatedTo: [RelAssociatesMaterial]
	HasExternalReferences: [ExternalReferenceRelationship]
	HasProperties: [MaterialProperties]
}
interface MaterialDefinition{
	AssociatedTo: [RelAssociatesMaterial]
	HasExternalReferences: [ExternalReferenceRelationship]
	HasProperties: [MaterialProperties]
}
type MaterialClassificationRelationship{
	MaterialClassifications: [ClassificationSelect]
	ClassifiedMaterial: Material
}
type MaterialConstituent implements MaterialDefinition{
	Name: Label!
	Description: Text!
	Material: Material
	Fraction: NormalisedRatioMeasure!
	Category: Label!
	ToMaterialConstituentSet: MaterialConstituentSet
	AssociatedTo: [RelAssociatesMaterial]
	HasExternalReferences: [ExternalReferenceRelationship]
	HasProperties: [MaterialProperties]
}
type MaterialConstituentSet implements MaterialDefinition{
	Name: Label!
	Description: Text!
	MaterialConstituents: [MaterialConstituent]!
	AssociatedTo: [RelAssociatesMaterial]
	HasExternalReferences: [ExternalReferenceRelationship]
	HasProperties: [MaterialProperties]
}
type MaterialLayer implements MaterialDefinition{
	Material: Material!
	LayerThickness: NonNegativeLengthMeasure
	IsVentilated: Logical!
	Name: Label!
	Description: Text!
	Category: Label!
	Priority: Integer!
	ToMaterialLayerSet: MaterialLayerSet
	AssociatedTo: [RelAssociatesMaterial]
	HasExternalReferences: [ExternalReferenceRelationship]
	HasProperties: [MaterialProperties]
}
type MaterialLayerSet implements MaterialDefinition{
	MaterialLayers: [MaterialLayer]
	LayerSetName: Label!
	Description: Text!
	AssociatedTo: [RelAssociatesMaterial]
	HasExternalReferences: [ExternalReferenceRelationship]
	HasProperties: [MaterialProperties]
}
type MaterialProfile implements MaterialDefinition{
	Name: Label!
	Description: Text!
	Material: Material!
	Profile: ProfileDef
	Priority: Integer!
	Category: Label!
	ToMaterialProfileSet: MaterialProfileSet
	AssociatedTo: [RelAssociatesMaterial]
	HasExternalReferences: [ExternalReferenceRelationship]
	HasProperties: [MaterialProperties]
}
type MaterialProfileSet implements MaterialDefinition{
	Name: Label!
	Description: Text!
	MaterialProfiles: [MaterialProfile]
	CompositeProfile: CompositeProfileDef!
	AssociatedTo: [RelAssociatesMaterial]
	HasExternalReferences: [ExternalReferenceRelationship]
	HasProperties: [MaterialProperties]
}
type MaterialDefinitionRepresentation implements ProductRepresentation{
	RepresentedMaterial: Material
	Name: Label!
	Description: Text!
	Representations: [Representation]
}
interface ProductRepresentation{
	Name: Label!
	Description: Text!
	Representations: [Representation]
}
type MaterialLayerWithOffsets implements MaterialLayer{
	OffsetDirection: LayerSetDirectionEnum
	OffsetValues: [LengthMeasure]
	Material: Material!
	LayerThickness: NonNegativeLengthMeasure
	IsVentilated: Logical!
	Name: Label!
	Description: Text!
	Category: Label!
	Priority: Integer!
	ToMaterialLayerSet: MaterialLayerSet
	AssociatedTo: [RelAssociatesMaterial]
	HasExternalReferences: [ExternalReferenceRelationship]
	HasProperties: [MaterialProperties]
}
type MaterialLayerSetUsage implements MaterialUsageDefinition{
	ForLayerSet: MaterialLayerSet
	LayerSetDirection: LayerSetDirectionEnum
	DirectionSense: DirectionSenseEnum
	OffsetFromReferenceLine: LengthMeasure
	ReferenceExtent: PositiveLengthMeasure!
	AssociatedTo: [RelAssociatesMaterial]
}
interface MaterialUsageDefinition{
	AssociatedTo: [RelAssociatesMaterial]
}
type MaterialList{
	Materials: [Material]
}
type MaterialProfileWithOffsets implements MaterialProfile{
	OffsetValues: [LengthMeasure]
	Name: Label!
	Description: Text!
	Material: Material!
	Profile: ProfileDef
	Priority: Integer!
	Category: Label!
	ToMaterialProfileSet: MaterialProfileSet
	AssociatedTo: [RelAssociatesMaterial]
	HasExternalReferences: [ExternalReferenceRelationship]
	HasProperties: [MaterialProperties]
}
type MaterialProfileSetUsage implements MaterialUsageDefinition{
	ForProfileSet: MaterialProfileSet
	CardinalPoint: CardinalPointReference!
	ReferenceExtent: PositiveLengthMeasure!
	AssociatedTo: [RelAssociatesMaterial]
}
type MaterialProfileSetUsageTapering implements MaterialProfileSetUsage{
	ForProfileEndSet: MaterialProfileSet
	CardinalEndPoint: CardinalPointReference!
	ForProfileSet: MaterialProfileSet
	CardinalPoint: CardinalPointReference!
	ReferenceExtent: PositiveLengthMeasure!
	AssociatedTo: [RelAssociatesMaterial]
}
type MaterialRelationship implements ResourceLevelRelationship{
	RelatingMaterial: Material
	RelatedMaterials: [Material]
	Expression: Label!
	Name: Label!
	Description: Text!
}
type MeasureWithUnit{
	ValueComponent: Value
	UnitComponent: Unit
}
type MemberStandardCase implements Member{
	PredefinedType: MemberTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type MonetaryUnit{
	Currency: Label
}
type SIUnit implements NamedUnit{
	Prefix: SIPrefix!
	Name: SIUnitName
	Dimensions: DimensionalExponents
	UnitType: UnitEnum
}
type TypeObject implements ObjectDefinition{
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface Root{
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type OpeningStandardCase implements OpeningElement{
	PredefinedType: OpeningElementTypeEnum!
	HasFillings: [RelFillsElement]
	VoidsElements: RelVoidsElement
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Organization{
	Identification: Identifier!
	Name: Label
	Description: Text!
	Roles: [ActorRole]!
	Addresses: [Address]!
	IsRelatedBy: [OrganizationRelationship]
	Relates: [OrganizationRelationship]
	Engages: [PersonAndOrganization]
}
type OrganizationRelationship implements ResourceLevelRelationship{
	RelatingOrganization: Organization
	RelatedOrganizations: [Organization]
	Name: Label!
	Description: Text!
}
type OwnerHistory{
	OwningUser: PersonAndOrganization
	OwningApplication: Application
	State: StateEnum!
	ChangeAction: ChangeActionEnum!
	LastModifiedDate: TimeStamp!
	LastModifyingUser: PersonAndOrganization!
	LastModifyingApplication: Application!
	CreationDate: TimeStamp
}
type RectangleProfileDef implements ParameterizedProfileDef{
	XDim: PositiveLengthMeasure
	YDim: PositiveLengthMeasure
	Position: Axis2Placement2D!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type TShapeProfileDef implements ParameterizedProfileDef{
	Depth: PositiveLengthMeasure
	FlangeWidth: PositiveLengthMeasure
	WebThickness: PositiveLengthMeasure
	FlangeThickness: PositiveLengthMeasure
	FilletRadius: NonNegativeLengthMeasure!
	FlangeEdgeRadius: NonNegativeLengthMeasure!
	WebEdgeRadius: NonNegativeLengthMeasure!
	WebSlope: PlaneAngleMeasure!
	FlangeSlope: PlaneAngleMeasure!
	Position: Axis2Placement2D!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type TrapeziumProfileDef implements ParameterizedProfileDef{
	BottomXDim: PositiveLengthMeasure
	TopXDim: PositiveLengthMeasure
	YDim: PositiveLengthMeasure
	TopXOffset: LengthMeasure
	Position: Axis2Placement2D!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type UShapeProfileDef implements ParameterizedProfileDef{
	Depth: PositiveLengthMeasure
	FlangeWidth: PositiveLengthMeasure
	WebThickness: PositiveLengthMeasure
	FlangeThickness: PositiveLengthMeasure
	FilletRadius: NonNegativeLengthMeasure!
	EdgeRadius: NonNegativeLengthMeasure!
	FlangeSlope: PlaneAngleMeasure!
	Position: Axis2Placement2D!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type ZShapeProfileDef implements ParameterizedProfileDef{
	Depth: PositiveLengthMeasure
	FlangeWidth: PositiveLengthMeasure
	WebThickness: PositiveLengthMeasure
	FlangeThickness: PositiveLengthMeasure
	FilletRadius: NonNegativeLengthMeasure!
	EdgeRadius: NonNegativeLengthMeasure!
	Position: Axis2Placement2D!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type Path implements TopologicalRepresentationItem{
	EdgeList: [OrientedEdge]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type PermeableCoveringProperties implements PreDefinedPropertySet{
	OperationType: PermeableCoveringOperationEnum
	PanelPosition: WindowPanelPositionEnum
	FrameDepth: PositiveLengthMeasure!
	FrameThickness: PositiveLengthMeasure!
	ShapeAspectStyle: ShapeAspect!
	DefinesType: [TypeObject]
	IsDefinedBy: [RelDefinesByTemplate]
	DefinesOccurrence: [RelDefinesByProperties]
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Person{
	Identification: Identifier!
	FamilyName: Label!
	GivenName: Label!
	MiddleNames: [Label]!
	PrefixTitles: [Label]!
	SuffixTitles: [Label]!
	Roles: [ActorRole]!
	Addresses: [Address]!
	EngagedIn: [PersonAndOrganization]
}
type PersonAndOrganization{
	ThePerson: Person
	TheOrganization: Organization
	Roles: [ActorRole]!
}
type PhysicalComplexQuantity implements PhysicalQuantity{
	HasQuantities: [PhysicalQuantity]
	Discrimination: Label
	Quality: Label!
	Usage: Label!
	Name: Label
	Description: Text!
	HasExternalReferences: [ExternalReferenceRelationship]
	PartOfComplex: [PhysicalComplexQuantity]
}
interface PhysicalQuantity{
	Name: Label
	Description: Text!
	HasExternalReferences: [ExternalReferenceRelationship]
	PartOfComplex: [PhysicalComplexQuantity]
}
interface PhysicalSimpleQuantity implements PhysicalQuantity{
	Unit: NamedUnit!
	Name: Label
	Description: Text!
	HasExternalReferences: [ExternalReferenceRelationship]
	PartOfComplex: [PhysicalComplexQuantity]
}
type QuantityArea implements PhysicalSimpleQuantity{
	AreaValue: AreaMeasure
	Formula: Label!
	Unit: NamedUnit!
	Name: Label
	Description: Text!
	HasExternalReferences: [ExternalReferenceRelationship]
	PartOfComplex: [PhysicalComplexQuantity]
}
type QuantityCount implements PhysicalSimpleQuantity{
	CountValue: CountMeasure
	Formula: Label!
	Unit: NamedUnit!
	Name: Label
	Description: Text!
	HasExternalReferences: [ExternalReferenceRelationship]
	PartOfComplex: [PhysicalComplexQuantity]
}
type QuantityLength implements PhysicalSimpleQuantity{
	LengthValue: LengthMeasure
	Formula: Label!
	Unit: NamedUnit!
	Name: Label
	Description: Text!
	HasExternalReferences: [ExternalReferenceRelationship]
	PartOfComplex: [PhysicalComplexQuantity]
}
type QuantityTime implements PhysicalSimpleQuantity{
	TimeValue: TimeMeasure
	Formula: Label!
	Unit: NamedUnit!
	Name: Label
	Description: Text!
	HasExternalReferences: [ExternalReferenceRelationship]
	PartOfComplex: [PhysicalComplexQuantity]
}
type QuantityVolume implements PhysicalSimpleQuantity{
	VolumeValue: VolumeMeasure
	Formula: Label!
	Unit: NamedUnit!
	Name: Label
	Description: Text!
	HasExternalReferences: [ExternalReferenceRelationship]
	PartOfComplex: [PhysicalComplexQuantity]
}
type QuantityWeight implements PhysicalSimpleQuantity{
	WeightValue: MassMeasure
	Formula: Label!
	Unit: NamedUnit!
	Name: Label
	Description: Text!
	HasExternalReferences: [ExternalReferenceRelationship]
	PartOfComplex: [PhysicalComplexQuantity]
}
type PixelTexture implements SurfaceTexture{
	Width: Integer
	Height: Integer
	ColourComponents: Integer
	Pixel: [Binary]
	RepeatS: Boolean
	RepeatT: Boolean
	Mode: Identifier!
	TextureTransform: CartesianTransformationOperator2D!
	Parameter: [Identifier]!
	IsMappedBy: [TextureCoordinate]
	UsedInStyles: [SurfaceStyleWithTextures]
}
type PlanarBox implements PlanarExtent{
	Placement: Axis2Placement
	SizeInX: LengthMeasure
	SizeInY: LengthMeasure
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type PlateStandardCase implements Plate{
	PredefinedType: PlateTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type PointOnCurve implements Point{
	BasisCurve: Curve
	PointParameter: ParameterValue
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type PointOnSurface implements Point{
	BasisSurface: Surface
	PointParameterU: ParameterValue
	PointParameterV: ParameterValue
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type PolygonalFaceSet implements TessellatedFaceSet{
	Closed: Boolean!
	Faces: [IndexedPolygonalFace]
	PnIndex: [PositiveInteger]!
	Coordinates: CartesianPointList3D
	HasColours: [IndexedColourMap]
	HasTextures: [IndexedTextureMap]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface TessellatedFaceSet implements TessellatedItem{
	Coordinates: CartesianPointList3D
	HasColours: [IndexedColourMap]
	HasTextures: [IndexedTextureMap]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
interface PreDefinedItem implements PresentationItem{
	Name: Label
}
interface PreDefinedTextFont implements PreDefinedItem{
	Name: Label
}
interface PreDefinedProperties implements PropertyAbstraction{
	HasExternalReferences: [ExternalReferenceRelationship]
}
type ReinforcementBarProperties implements PreDefinedProperties{
	TotalCrossSectionArea: AreaMeasure
	SteelGrade: Label
	BarSurface: ReinforcingBarSurfaceEnum!
	EffectiveDepth: LengthMeasure!
	NominalBarDiameter: PositiveLengthMeasure!
	BarCount: CountMeasure!
	HasExternalReferences: [ExternalReferenceRelationship]
}
type SectionProperties implements PreDefinedProperties{
	SectionType: SectionTypeEnum
	StartProfile: ProfileDef
	EndProfile: ProfileDef!
	HasExternalReferences: [ExternalReferenceRelationship]
}
type SectionReinforcementProperties implements PreDefinedProperties{
	LongitudinalStartPosition: LengthMeasure
	LongitudinalEndPosition: LengthMeasure
	TransversePosition: LengthMeasure!
	ReinforcementRole: ReinforcingBarRoleEnum
	SectionDefinition: SectionProperties
	CrossSectionReinforcementDefinitions: [ReinforcementBarProperties]
	HasExternalReferences: [ExternalReferenceRelationship]
}
type ReinforcementDefinitionProperties implements PreDefinedPropertySet{
	DefinitionType: Label!
	ReinforcementSectionDefinitions: [SectionReinforcementProperties]
	DefinesType: [TypeObject]
	IsDefinedBy: [RelDefinesByTemplate]
	DefinesOccurrence: [RelDefinesByProperties]
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type WindowLiningProperties implements PreDefinedPropertySet{
	LiningDepth: PositiveLengthMeasure!
	LiningThickness: NonNegativeLengthMeasure!
	TransomThickness: NonNegativeLengthMeasure!
	MullionThickness: NonNegativeLengthMeasure!
	FirstTransomOffset: NormalisedRatioMeasure!
	SecondTransomOffset: NormalisedRatioMeasure!
	FirstMullionOffset: NormalisedRatioMeasure!
	SecondMullionOffset: NormalisedRatioMeasure!
	ShapeAspectStyle: ShapeAspect!
	LiningOffset: LengthMeasure!
	LiningToPanelOffsetX: LengthMeasure!
	LiningToPanelOffsetY: LengthMeasure!
	DefinesType: [TypeObject]
	IsDefinedBy: [RelDefinesByTemplate]
	DefinesOccurrence: [RelDefinesByProperties]
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type WindowPanelProperties implements PreDefinedPropertySet{
	OperationType: WindowPanelOperationEnum
	PanelPosition: WindowPanelPositionEnum
	FrameDepth: PositiveLengthMeasure!
	FrameThickness: PositiveLengthMeasure!
	ShapeAspectStyle: ShapeAspect!
	DefinesType: [TypeObject]
	IsDefinedBy: [RelDefinesByTemplate]
	DefinesOccurrence: [RelDefinesByProperties]
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface PropertySetDefinition implements PropertyDefinition{
	DefinesType: [TypeObject]
	IsDefinedBy: [RelDefinesByTemplate]
	DefinesOccurrence: [RelDefinesByProperties]
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type TextStyleFontModel implements PreDefinedTextFont{
	FontFamily: [TextFontName]
	FontStyle: FontStyle!
	FontVariant: FontVariant!
	FontWeight: FontWeight!
	FontSize: SizeSelect
	Name: Label
}
type SurfaceStyleLighting implements PresentationItem{
	DiffuseTransmissionColour: ColourRgb
	DiffuseReflectionColour: ColourRgb
	TransmissionColour: ColourRgb
	ReflectanceColour: ColourRgb
}
type SurfaceStyleRefraction implements PresentationItem{
	RefractionIndex: Real!
	DispersionFactor: Real!
}
type SurfaceStyleShading implements PresentationItem{
	SurfaceColour: ColourRgb
	Transparency: NormalisedRatioMeasure!
}
type SurfaceStyleWithTextures implements PresentationItem{
	Textures: [SurfaceTexture]
}
type TextStyleForDefinedFont implements PresentationItem{
	Colour: Colour
	BackgroundColour: Colour!
}
type TextStyleTextModel implements PresentationItem{
	TextIndent: SizeSelect!
	TextAlign: TextAlignment!
	TextDecoration: TextDecoration!
	LetterSpacing: SizeSelect!
	WordSpacing: SizeSelect!
	TextTransform: TextTransformation!
	LineHeight: SizeSelect!
}
type TextureVertex implements PresentationItem{
	Coordinates: [ParameterValue]
}
type TextureVertexList implements PresentationItem{
	TexCoordsList: [[ParameterValue]]
}
type PresentationLayerAssignment{
	Name: Label
	Description: Text!
	AssignedItems: [LayeredItem]
	Identifier: Identifier!
}
type PresentationLayerWithStyle implements PresentationLayerAssignment{
	LayerOn: Logical
	LayerFrozen: Logical
	LayerBlocked: Logical
	LayerStyles: [PresentationStyle]
	Name: Label
	Description: Text!
	AssignedItems: [LayeredItem]
	Identifier: Identifier!
}
type SurfaceStyle implements PresentationStyle{
	Side: SurfaceSide
	Styles: [SurfaceStyleElementSelect]
	Name: Label!
}
type TextStyle implements PresentationStyle{
	TextCharacterAppearance: TextStyleForDefinedFont!
	TextStyle: TextStyleTextModel!
	TextFontStyle: TextFontSelect
	ModelOrDraughting: Boolean!
	Name: Label!
}
type PresentationStyleAssignment{
	Styles: [PresentationStyleSelect]
}
type Procedure implements Process{
	PredefinedType: ProcedureTypeEnum!
	Identification: Identifier!
	LongDescription: Text!
	IsPredecessorTo: [RelSequence]
	IsSuccessorFrom: [RelSequence]
	OperatesOn: [RelAssignsToProcess]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ProcedureType implements TypeProcess{
	PredefinedType: ProcedureTypeEnum
	Identification: Identifier!
	LongDescription: Text!
	ProcessType: Label!
	OperatesOn: [RelAssignsToProcess]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Task implements Process{
	Status: Label!
	WorkMethod: Label!
	IsMilestone: Boolean
	Priority: Integer!
	TaskTime: TaskTime!
	PredefinedType: TaskTypeEnum!
	Identification: Identifier!
	LongDescription: Text!
	IsPredecessorTo: [RelSequence]
	IsSuccessorFrom: [RelSequence]
	OperatesOn: [RelAssignsToProcess]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Proxy implements Product{
	ProxyType: ObjectTypeEnum
	Tag: Label!
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface StructuralActivity implements Product{
	AppliedLoad: StructuralLoad
	GlobalOrLocal: GlobalOrLocalEnum
	AssignedToStructuralItem: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface StructuralItem implements Product{
	AssignedStructuralActivity: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ProductDefinitionShape implements ProductRepresentation{
	ShapeOfProduct: [Product]
	HasShapeAspects: [ShapeAspect]
	Name: Label!
	Description: Text!
	Representations: [Representation]
}
interface SimpleProperty implements Property{
	Name: Identifier
	Description: Text!
	PartOfPset: [PropertySet]
	PropertyForDependance: [PropertyDependencyRelationship]
	PropertyDependsOn: [PropertyDependencyRelationship]
	PartOfComplex: [ComplexProperty]
	HasConstraints: [ResourceConstraintRelationship]
	HasApprovals: [ResourceApprovalRelationship]
	HasExternalReferences: [ExternalReferenceRelationship]
}
type PropertyEnumeration implements PropertyAbstraction{
	Name: Label
	EnumerationValues: [Value]
	Unit: Unit!
	HasExternalReferences: [ExternalReferenceRelationship]
}
type PropertyBoundedValue implements SimpleProperty{
	UpperBoundValue: Value!
	LowerBoundValue: Value!
	Unit: Unit!
	SetPointValue: Value!
	Name: Identifier
	Description: Text!
	PartOfPset: [PropertySet]
	PropertyForDependance: [PropertyDependencyRelationship]
	PropertyDependsOn: [PropertyDependencyRelationship]
	PartOfComplex: [ComplexProperty]
	HasConstraints: [ResourceConstraintRelationship]
	HasApprovals: [ResourceApprovalRelationship]
	HasExternalReferences: [ExternalReferenceRelationship]
}
interface PropertyDefinition implements Root{
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface PropertyTemplateDefinition implements PropertyDefinition{
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type PropertyDependencyRelationship implements ResourceLevelRelationship{
	DependingProperty: Property
	DependantProperty: Property
	Expression: Text!
	Name: Label!
	Description: Text!
}
type PropertyEnumeratedValue implements SimpleProperty{
	EnumerationValues: [Value]!
	EnumerationReference: PropertyEnumeration!
	Name: Identifier
	Description: Text!
	PartOfPset: [PropertySet]
	PropertyForDependance: [PropertyDependencyRelationship]
	PropertyDependsOn: [PropertyDependencyRelationship]
	PartOfComplex: [ComplexProperty]
	HasConstraints: [ResourceConstraintRelationship]
	HasApprovals: [ResourceApprovalRelationship]
	HasExternalReferences: [ExternalReferenceRelationship]
}
type PropertyListValue implements SimpleProperty{
	ListValues: [Value]!
	Unit: Unit!
	Name: Identifier
	Description: Text!
	PartOfPset: [PropertySet]
	PropertyForDependance: [PropertyDependencyRelationship]
	PropertyDependsOn: [PropertyDependencyRelationship]
	PartOfComplex: [ComplexProperty]
	HasConstraints: [ResourceConstraintRelationship]
	HasApprovals: [ResourceApprovalRelationship]
	HasExternalReferences: [ExternalReferenceRelationship]
}
type PropertyReferenceValue implements SimpleProperty{
	UsageName: Text!
	PropertyReference: ObjectReferenceSelect!
	Name: Identifier
	Description: Text!
	PartOfPset: [PropertySet]
	PropertyForDependance: [PropertyDependencyRelationship]
	PropertyDependsOn: [PropertyDependencyRelationship]
	PartOfComplex: [ComplexProperty]
	HasConstraints: [ResourceConstraintRelationship]
	HasApprovals: [ResourceApprovalRelationship]
	HasExternalReferences: [ExternalReferenceRelationship]
}
type PropertySet implements PropertySetDefinition{
	HasProperties: [Property]
	DefinesType: [TypeObject]
	IsDefinedBy: [RelDefinesByTemplate]
	DefinesOccurrence: [RelDefinesByProperties]
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type PropertySetTemplate implements PropertyTemplateDefinition{
	TemplateType: PropertySetTemplateTypeEnum!
	ApplicableEntity: Identifier!
	HasPropertyTemplates: [PropertyTemplate]
	Defines: [RelDefinesByTemplate]
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type PropertySingleValue implements SimpleProperty{
	NominalValue: Value!
	Unit: Unit!
	Name: Identifier
	Description: Text!
	PartOfPset: [PropertySet]
	PropertyForDependance: [PropertyDependencyRelationship]
	PropertyDependsOn: [PropertyDependencyRelationship]
	PartOfComplex: [ComplexProperty]
	HasConstraints: [ResourceConstraintRelationship]
	HasApprovals: [ResourceApprovalRelationship]
	HasExternalReferences: [ExternalReferenceRelationship]
}
type PropertyTableValue implements SimpleProperty{
	DefiningValues: [Value]!
	DefinedValues: [Value]!
	Expression: Text!
	DefiningUnit: Unit!
	DefinedUnit: Unit!
	CurveInterpolation: CurveInterpolationEnum!
	Name: Identifier
	Description: Text!
	PartOfPset: [PropertySet]
	PropertyForDependance: [PropertyDependencyRelationship]
	PropertyDependsOn: [PropertyDependencyRelationship]
	PartOfComplex: [ComplexProperty]
	HasConstraints: [ResourceConstraintRelationship]
	HasApprovals: [ResourceApprovalRelationship]
	HasExternalReferences: [ExternalReferenceRelationship]
}
type SimplePropertyTemplate implements PropertyTemplate{
	TemplateType: SimplePropertyTemplateTypeEnum!
	PrimaryMeasureType: Label!
	SecondaryMeasureType: Label!
	Enumerators: PropertyEnumeration!
	PrimaryUnit: Unit!
	SecondaryUnit: Unit!
	Expression: Label!
	AccessState: StateEnum!
	PartOfComplexTemplate: [ComplexPropertyTemplate]
	PartOfPsetTemplate: [PropertySetTemplate]
	HasContext: [RelDeclares]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RectangleHollowProfileDef implements RectangleProfileDef{
	WallThickness: PositiveLengthMeasure
	InnerFilletRadius: NonNegativeLengthMeasure!
	OuterFilletRadius: NonNegativeLengthMeasure!
	XDim: PositiveLengthMeasure
	YDim: PositiveLengthMeasure
	Position: Axis2Placement2D!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type RoundedRectangleProfileDef implements RectangleProfileDef{
	RoundingRadius: PositiveLengthMeasure
	XDim: PositiveLengthMeasure
	YDim: PositiveLengthMeasure
	Position: Axis2Placement2D!
	ProfileType: ProfileTypeEnum
	ProfileName: Label!
	HasExternalReference: [ExternalReferenceRelationship]
	HasProperties: [ProfileProperties]
}
type RecurrencePattern{
	RecurrenceType: RecurrenceTypeEnum
	DayComponent: [DayInMonthNumber]!
	WeekdayComponent: [DayInWeekNumber]!
	MonthComponent: [MonthInYearNumber]!
	Position: Integer!
	Interval: Integer!
	Occurrences: Integer!
	TimePeriods: [TimePeriod]!
}
type Reference{
	TypeIdentifier: Identifier!
	AttributeIdentifier: Identifier!
	InstanceName: Label!
	ListPositions: [Integer]!
	InnerReference: Reference!
}
type RegularTimeSeries implements TimeSeries{
	TimeStep: TimeMeasure
	Values: [TimeSeriesValue]
	Name: Label
	Description: Text!
	StartTime: DateTime
	EndTime: DateTime
	TimeSeriesDataType: TimeSeriesDataTypeEnum
	DataOrigin: DataOriginEnum
	UserDefinedDataOrigin: Label!
	Unit: Unit!
	HasExternalReference: [ExternalReferenceRelationship]
}
type ReinforcingBar implements ReinforcingElement{
	NominalDiameter: PositiveLengthMeasure!
	CrossSectionArea: AreaMeasure!
	BarLength: PositiveLengthMeasure!
	PredefinedType: ReinforcingBarTypeEnum!
	BarSurface: ReinforcingBarSurfaceEnum!
	SteelGrade: Label!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ReinforcingBarType implements ReinforcingElementType{
	PredefinedType: ReinforcingBarTypeEnum
	NominalDiameter: PositiveLengthMeasure!
	CrossSectionArea: AreaMeasure!
	BarLength: PositiveLengthMeasure!
	BarSurface: ReinforcingBarSurfaceEnum!
	BendingShapeCode: Label!
	BendingParameters: [BendingParameterSelect]!
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ReinforcingMesh implements ReinforcingElement{
	MeshLength: PositiveLengthMeasure!
	MeshWidth: PositiveLengthMeasure!
	LongitudinalBarNominalDiameter: PositiveLengthMeasure!
	TransverseBarNominalDiameter: PositiveLengthMeasure!
	LongitudinalBarCrossSectionArea: AreaMeasure!
	TransverseBarCrossSectionArea: AreaMeasure!
	LongitudinalBarSpacing: PositiveLengthMeasure!
	TransverseBarSpacing: PositiveLengthMeasure!
	PredefinedType: ReinforcingMeshTypeEnum!
	SteelGrade: Label!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Tendon implements ReinforcingElement{
	PredefinedType: TendonTypeEnum!
	NominalDiameter: PositiveLengthMeasure!
	CrossSectionArea: AreaMeasure!
	TensionForce: ForceMeasure!
	PreStress: PressureMeasure!
	FrictionCoefficient: NormalisedRatioMeasure!
	AnchorageSlip: PositiveLengthMeasure!
	MinCurvatureRadius: PositiveLengthMeasure!
	SteelGrade: Label!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type TendonAnchor implements ReinforcingElement{
	PredefinedType: TendonAnchorTypeEnum!
	SteelGrade: Label!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type ReinforcingMeshType implements ReinforcingElementType{
	PredefinedType: ReinforcingMeshTypeEnum
	MeshLength: PositiveLengthMeasure!
	MeshWidth: PositiveLengthMeasure!
	LongitudinalBarNominalDiameter: PositiveLengthMeasure!
	TransverseBarNominalDiameter: PositiveLengthMeasure!
	LongitudinalBarCrossSectionArea: AreaMeasure!
	TransverseBarCrossSectionArea: AreaMeasure!
	LongitudinalBarSpacing: PositiveLengthMeasure!
	TransverseBarSpacing: PositiveLengthMeasure!
	BendingShapeCode: Label!
	BendingParameters: [BendingParameterSelect]!
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type TendonAnchorType implements ReinforcingElementType{
	PredefinedType: TendonAnchorTypeEnum
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type TendonType implements ReinforcingElementType{
	PredefinedType: TendonTypeEnum
	NominalDiameter: PositiveLengthMeasure!
	CrossSectionArea: AreaMeasure!
	SheathDiameter: PositiveLengthMeasure!
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelAggregates implements RelDecomposes{
	RelatingObject: ObjectDefinition
	RelatedObjects: [ObjectDefinition]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface RelDecomposes implements Relationship{
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface RelAssigns implements Relationship{
	RelatedObjects: [ObjectDefinition]
	RelatedObjectsType: ObjectTypeEnum!
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelAssignsToActor implements RelAssigns{
	RelatingActor: Actor
	ActingRole: ActorRole!
	RelatedObjects: [ObjectDefinition]
	RelatedObjectsType: ObjectTypeEnum!
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelAssignsToControl implements RelAssigns{
	RelatingControl: Control
	RelatedObjects: [ObjectDefinition]
	RelatedObjectsType: ObjectTypeEnum!
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelAssignsToGroup implements RelAssigns{
	RelatingGroup: Group
	RelatedObjects: [ObjectDefinition]
	RelatedObjectsType: ObjectTypeEnum!
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelAssignsToProcess implements RelAssigns{
	RelatingProcess: ProcessSelect
	QuantityInProcess: MeasureWithUnit!
	RelatedObjects: [ObjectDefinition]
	RelatedObjectsType: ObjectTypeEnum!
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelAssignsToProduct implements RelAssigns{
	RelatingProduct: ProductSelect
	RelatedObjects: [ObjectDefinition]
	RelatedObjectsType: ObjectTypeEnum!
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelAssignsToResource implements RelAssigns{
	RelatingResource: ResourceSelect
	RelatedObjects: [ObjectDefinition]
	RelatedObjectsType: ObjectTypeEnum!
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface Relationship implements Root{
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelAssignsToGroupByFactor implements RelAssignsToGroup{
	Factor: RatioMeasure
	RelatingGroup: Group
	RelatedObjects: [ObjectDefinition]
	RelatedObjectsType: ObjectTypeEnum!
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface RelAssociates implements Relationship{
	RelatedObjects: [DefinitionSelect]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelAssociatesApproval implements RelAssociates{
	RelatingApproval: Approval
	RelatedObjects: [DefinitionSelect]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelAssociatesClassification implements RelAssociates{
	RelatingClassification: ClassificationSelect
	RelatedObjects: [DefinitionSelect]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelAssociatesConstraint implements RelAssociates{
	Intent: Label!
	RelatingConstraint: Constraint
	RelatedObjects: [DefinitionSelect]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelAssociatesDocument implements RelAssociates{
	RelatingDocument: DocumentSelect
	RelatedObjects: [DefinitionSelect]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelAssociatesLibrary implements RelAssociates{
	RelatingLibrary: LibrarySelect
	RelatedObjects: [DefinitionSelect]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelAssociatesMaterial implements RelAssociates{
	RelatingMaterial: MaterialSelect
	RelatedObjects: [DefinitionSelect]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface RelConnects implements Relationship{
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelConnectsElements implements RelConnects{
	ConnectionGeometry: ConnectionGeometry!
	RelatingElement: Element
	RelatedElement: Element
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelConnectsPortToElement implements RelConnects{
	RelatingPort: Port
	RelatedElement: DistributionElement
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelConnectsPorts implements RelConnects{
	RelatingPort: Port
	RelatedPort: Port
	RealizingElement: Element!
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelConnectsStructuralActivity implements RelConnects{
	RelatingElement: StructuralActivityAssignmentSelect
	RelatedStructuralActivity: StructuralActivity
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelConnectsStructuralMember implements RelConnects{
	RelatingStructuralMember: StructuralMember
	RelatedStructuralConnection: StructuralConnection
	AppliedCondition: BoundaryCondition!
	AdditionalConditions: StructuralConnectionCondition!
	SupportedLength: LengthMeasure!
	ConditionCoordinateSystem: Axis2Placement3D!
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelContainedInSpatialStructure implements RelConnects{
	RelatedElements: [Product]
	RelatingStructure: SpatialElement
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelCoversBldgElements implements RelConnects{
	RelatingBuildingElement: Element
	RelatedCoverings: [Covering]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelCoversSpaces implements RelConnects{
	RelatingSpace: Space
	RelatedCoverings: [Covering]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelFillsElement implements RelConnects{
	RelatingOpeningElement: OpeningElement
	RelatedBuildingElement: Element
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelFlowControlElements implements RelConnects{
	RelatedControlElements: [DistributionControlElement]
	RelatingFlowElement: DistributionFlowElement
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelInterferesElements implements RelConnects{
	RelatingElement: Element
	RelatedElement: Element
	InterferenceGeometry: ConnectionGeometry!
	InterferenceType: Identifier!
	ImpliedOrder: Boolean
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelReferencedInSpatialStructure implements RelConnects{
	RelatedElements: [Product]
	RelatingStructure: SpatialElement
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelSequence implements RelConnects{
	RelatingProcess: Process
	RelatedProcess: Process
	TimeLag: LagTime!
	SequenceType: SequenceEnum!
	UserDefinedSequenceType: Label!
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelServicesBuildings implements RelConnects{
	RelatingSystem: System
	RelatedBuildings: [SpatialElement]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelSpaceBoundary implements RelConnects{
	RelatingSpace: SpaceBoundarySelect
	RelatedBuildingElement: Element
	ConnectionGeometry: ConnectionGeometry!
	PhysicalOrVirtualBoundary: PhysicalOrVirtualEnum
	InternalOrExternalBoundary: InternalOrExternalEnum
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelConnectsPathElements implements RelConnectsElements{
	RelatingPriorities: [Integer]
	RelatedPriorities: [Integer]
	RelatedConnectionType: ConnectionTypeEnum
	RelatingConnectionType: ConnectionTypeEnum
	ConnectionGeometry: ConnectionGeometry!
	RelatingElement: Element
	RelatedElement: Element
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelConnectsWithRealizingElements implements RelConnectsElements{
	RealizingElements: [Element]
	ConnectionType: Label!
	ConnectionGeometry: ConnectionGeometry!
	RelatingElement: Element
	RelatedElement: Element
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelConnectsWithEccentricity implements RelConnectsStructuralMember{
	ConnectionConstraint: ConnectionGeometry
	RelatingStructuralMember: StructuralMember
	RelatedStructuralConnection: StructuralConnection
	AppliedCondition: BoundaryCondition!
	AdditionalConditions: StructuralConnectionCondition!
	SupportedLength: LengthMeasure!
	ConditionCoordinateSystem: Axis2Placement3D!
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelDeclares implements Relationship{
	RelatingContext: Context
	RelatedDefinitions: [DefinitionSelect]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelNests implements RelDecomposes{
	RelatingObject: ObjectDefinition
	RelatedObjects: [ObjectDefinition]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelProjectsElement implements RelDecomposes{
	RelatingElement: Element
	RelatedFeatureElement: FeatureElementAddition
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelVoidsElement implements RelDecomposes{
	RelatingBuildingElement: Element
	RelatedOpeningElement: FeatureElementSubtraction
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface RelDefines implements Relationship{
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelDefinesByObject implements RelDefines{
	RelatedObjects: [Object]
	RelatingObject: Object
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelDefinesByProperties implements RelDefines{
	RelatedObjects: [ObjectDefinition]
	RelatingPropertyDefinition: PropertySetDefinitionSelect
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelDefinesByTemplate implements RelDefines{
	RelatedPropertySets: [PropertySetDefinition]
	RelatingTemplate: PropertySetTemplate
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelDefinesByType implements RelDefines{
	RelatedObjects: [Object]
	RelatingType: TypeObject
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelSpaceBoundary1stLevel implements RelSpaceBoundary{
	ParentBoundary: RelSpaceBoundary1stLevel!
	InnerBoundaries: [RelSpaceBoundary1stLevel]
	RelatingSpace: SpaceBoundarySelect
	RelatedBuildingElement: Element
	ConnectionGeometry: ConnectionGeometry!
	PhysicalOrVirtualBoundary: PhysicalOrVirtualEnum
	InternalOrExternalBoundary: InternalOrExternalEnum
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type RelSpaceBoundary2ndLevel implements RelSpaceBoundary1stLevel{
	CorrespondingBoundary: RelSpaceBoundary2ndLevel!
	Corresponds: [RelSpaceBoundary2ndLevel]
	ParentBoundary: RelSpaceBoundary1stLevel!
	InnerBoundaries: [RelSpaceBoundary1stLevel]
	RelatingSpace: SpaceBoundarySelect
	RelatedBuildingElement: Element
	ConnectionGeometry: ConnectionGeometry!
	PhysicalOrVirtualBoundary: PhysicalOrVirtualEnum
	InternalOrExternalBoundary: InternalOrExternalEnum
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface Representation{
	ContextOfItems: RepresentationContext
	RepresentationIdentifier: Label!
	RepresentationType: Label!
	Items: [RepresentationItem]
	RepresentationMap: [RepresentationMap]
	LayerAssignments: [PresentationLayerAssignment]
	OfProductRepresentation: [ProductRepresentation]
}
interface ShapeModel implements Representation{
	OfShapeAspect: [ShapeAspect]
	ContextOfItems: RepresentationContext
	RepresentationIdentifier: Label!
	RepresentationType: Label!
	Items: [RepresentationItem]
	RepresentationMap: [RepresentationMap]
	LayerAssignments: [PresentationLayerAssignment]
	OfProductRepresentation: [ProductRepresentation]
}
interface StyleModel implements Representation{
	ContextOfItems: RepresentationContext
	RepresentationIdentifier: Label!
	RepresentationType: Label!
	Items: [RepresentationItem]
	RepresentationMap: [RepresentationMap]
	LayerAssignments: [PresentationLayerAssignment]
	OfProductRepresentation: [ProductRepresentation]
}
type StyledItem implements RepresentationItem{
	Item: RepresentationItem!
	Styles: [StyleAssignmentSelect]
	Name: Label!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type RepresentationMap{
	MappingOrigin: Axis2Placement
	MappedRepresentation: Representation
	HasShapeAspects: [ShapeAspect]
	MapUsage: [MappedItem]
}
type ResourceApprovalRelationship implements ResourceLevelRelationship{
	RelatedResourceObjects: [ResourceObjectSelect]
	RelatingApproval: Approval
	Name: Label!
	Description: Text!
}
type ResourceConstraintRelationship implements ResourceLevelRelationship{
	RelatingConstraint: Constraint
	RelatedResourceObjects: [ResourceObjectSelect]
	Name: Label!
	Description: Text!
}
type ResourceTime implements SchedulingTime{
	ScheduleWork: Duration!
	ScheduleUsage: PositiveRatioMeasure!
	ScheduleStart: DateTime!
	ScheduleFinish: DateTime!
	ScheduleContour: Label!
	LevelingDelay: Duration!
	IsOverAllocated: Boolean!
	StatusTime: DateTime!
	ActualWork: Duration!
	ActualUsage: PositiveRatioMeasure!
	ActualStart: DateTime!
	ActualFinish: DateTime!
	RemainingWork: Duration!
	RemainingUsage: PositiveRatioMeasure!
	Completion: PositiveRatioMeasure!
	Name: Label!
	DataOrigin: DataOriginEnum!
	UserDefinedDataOrigin: Label!
}
type RevolvedAreaSolid implements SweptAreaSolid{
	Axis: Axis1Placement
	Angle: PlaneAngleMeasure
	SweptArea: ProfileDef
	Position: Axis2Placement3D!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type RevolvedAreaSolidTapered implements RevolvedAreaSolid{
	EndSweptArea: ProfileDef
	Axis: Axis1Placement
	Angle: PlaneAngleMeasure
	SweptArea: ProfileDef
	Position: Axis2Placement3D!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type TaskTime implements SchedulingTime{
	DurationType: TaskDurationEnum!
	ScheduleDuration: Duration!
	ScheduleStart: DateTime!
	ScheduleFinish: DateTime!
	EarlyStart: DateTime!
	EarlyFinish: DateTime!
	LateStart: DateTime!
	LateFinish: DateTime!
	FreeFloat: Duration!
	TotalFloat: Duration!
	IsCritical: Boolean!
	StatusTime: DateTime!
	ActualDuration: Duration!
	ActualStart: DateTime!
	ActualFinish: DateTime!
	RemainingTime: Duration!
	Completion: PositiveRatioMeasure!
	Name: Label!
	DataOrigin: DataOriginEnum!
	UserDefinedDataOrigin: Label!
}
type WorkTime implements SchedulingTime{
	RecurrencePattern: RecurrencePattern!
	Start: Date!
	Finish: Date!
	Name: Label!
	DataOrigin: DataOriginEnum!
	UserDefinedDataOrigin: Label!
}
type SeamCurve implements SurfaceCurve{
	Curve3D: Curve
	AssociatedGeometry: [Pcurve]
	MasterRepresentation: PreferredSurfaceCurveRepresentation
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type ShapeAspect{
	ShapeRepresentations: [ShapeModel]
	Name: Label!
	Description: Text!
	ProductDefinitional: Logical
	PartOfProductDefinitionShape: ProductRepresentationSelect!
}
type ShapeRepresentation implements ShapeModel{
	OfShapeAspect: [ShapeAspect]
	ContextOfItems: RepresentationContext
	RepresentationIdentifier: Label!
	RepresentationType: Label!
	Items: [RepresentationItem]
	RepresentationMap: [RepresentationMap]
	LayerAssignments: [PresentationLayerAssignment]
	OfProductRepresentation: [ProductRepresentation]
}
type TopologyRepresentation implements ShapeModel{
	OfShapeAspect: [ShapeAspect]
	ContextOfItems: RepresentationContext
	RepresentationIdentifier: Label!
	RepresentationType: Label!
	Items: [RepresentationItem]
	RepresentationMap: [RepresentationMap]
	LayerAssignments: [PresentationLayerAssignment]
	OfProductRepresentation: [ProductRepresentation]
}
type Site implements SpatialStructureElement{
	RefLatitude: CompoundPlaneAngleMeasure!
	RefLongitude: CompoundPlaneAngleMeasure!
	RefElevation: LengthMeasure!
	LandTitleNumber: Label!
	SiteAddress: PostalAddress!
	CompositionType: ElementCompositionEnum!
	LongName: Label!
	ContainsElements: [RelContainedInSpatialStructure]
	ServicedBySystems: [RelServicesBuildings]
	ReferencesElements: [RelReferencedInSpatialStructure]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SlabElementedCase implements Slab{
	PredefinedType: SlabTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SlabStandardCase implements Slab{
	PredefinedType: SlabTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SlippageConnectionCondition implements StructuralConnectionCondition{
	SlippageX: LengthMeasure!
	SlippageY: LengthMeasure!
	SlippageZ: LengthMeasure!
	Name: Label!
}
type SweptDiskSolid implements SolidModel{
	Directrix: Curve
	Radius: PositiveLengthMeasure
	InnerRadius: PositiveLengthMeasure!
	StartParam: ParameterValue!
	EndParam: ParameterValue!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Space implements SpatialStructureElement{
	PredefinedType: SpaceTypeEnum!
	ElevationWithFlooring: LengthMeasure!
	HasCoverings: [RelCoversSpaces]
	BoundedBy: [RelSpaceBoundary]
	CompositionType: ElementCompositionEnum!
	LongName: Label!
	ContainsElements: [RelContainedInSpatialStructure]
	ServicedBySystems: [RelServicesBuildings]
	ReferencesElements: [RelReferencedInSpatialStructure]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SpaceType implements SpatialStructureElementType{
	PredefinedType: SpaceTypeEnum
	LongName: Label!
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface SpatialStructureElementType implements SpatialElementType{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SpatialZone implements SpatialElement{
	PredefinedType: SpatialZoneTypeEnum!
	LongName: Label!
	ContainsElements: [RelContainedInSpatialStructure]
	ServicedBySystems: [RelServicesBuildings]
	ReferencesElements: [RelReferencedInSpatialStructure]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface SpatialElementType implements TypeProduct{
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type SpatialZoneType implements SpatialElementType{
	PredefinedType: SpatialZoneTypeEnum
	LongName: Label!
	ElementType: Label!
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface StructuralAction implements StructuralActivity{
	DestabilizingLoad: Boolean!
	AppliedLoad: StructuralLoad
	GlobalOrLocal: GlobalOrLocalEnum
	AssignedToStructuralItem: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralCurveAction implements StructuralAction{
	ProjectedOrTrue: ProjectedOrTrueLengthEnum!
	PredefinedType: StructuralCurveActivityTypeEnum
	DestabilizingLoad: Boolean!
	AppliedLoad: StructuralLoad
	GlobalOrLocal: GlobalOrLocalEnum
	AssignedToStructuralItem: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralPointAction implements StructuralAction{
	DestabilizingLoad: Boolean!
	AppliedLoad: StructuralLoad
	GlobalOrLocal: GlobalOrLocalEnum
	AssignedToStructuralItem: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralSurfaceAction implements StructuralAction{
	ProjectedOrTrue: ProjectedOrTrueLengthEnum!
	PredefinedType: StructuralSurfaceActivityTypeEnum
	DestabilizingLoad: Boolean!
	AppliedLoad: StructuralLoad
	GlobalOrLocal: GlobalOrLocalEnum
	AssignedToStructuralItem: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface StructuralReaction implements StructuralActivity{
	AppliedLoad: StructuralLoad
	GlobalOrLocal: GlobalOrLocalEnum
	AssignedToStructuralItem: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralAnalysisModel implements System{
	PredefinedType: AnalysisModelTypeEnum
	OrientationOf2DPlane: Axis2Placement3D!
	LoadedBy: [StructuralLoadGroup]!
	HasResults: [StructuralResultGroup]!
	SharedPlacement: ObjectPlacement!
	ServicesBuildings: [RelServicesBuildings]
	IsGroupedBy: [RelAssignsToGroup]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface StructuralConnection implements StructuralItem{
	AppliedCondition: BoundaryCondition!
	ConnectsStructuralMembers: [RelConnectsStructuralMember]
	AssignedStructuralActivity: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralCurveConnection implements StructuralConnection{
	Axis: Direction
	AppliedCondition: BoundaryCondition!
	ConnectsStructuralMembers: [RelConnectsStructuralMember]
	AssignedStructuralActivity: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralPointConnection implements StructuralConnection{
	ConditionCoordinateSystem: Axis2Placement3D!
	AppliedCondition: BoundaryCondition!
	ConnectsStructuralMembers: [RelConnectsStructuralMember]
	AssignedStructuralActivity: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralSurfaceConnection implements StructuralConnection{
	AppliedCondition: BoundaryCondition!
	ConnectsStructuralMembers: [RelConnectsStructuralMember]
	AssignedStructuralActivity: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralLinearAction implements StructuralCurveAction{
	ProjectedOrTrue: ProjectedOrTrueLengthEnum!
	PredefinedType: StructuralCurveActivityTypeEnum
	DestabilizingLoad: Boolean!
	AppliedLoad: StructuralLoad
	GlobalOrLocal: GlobalOrLocalEnum
	AssignedToStructuralItem: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralCurveMember implements StructuralMember{
	PredefinedType: StructuralCurveMemberTypeEnum
	Axis: Direction
	ConnectedBy: [RelConnectsStructuralMember]
	AssignedStructuralActivity: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralCurveMemberVarying implements StructuralCurveMember{
	PredefinedType: StructuralCurveMemberTypeEnum
	Axis: Direction
	ConnectedBy: [RelConnectsStructuralMember]
	AssignedStructuralActivity: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface StructuralMember implements StructuralItem{
	ConnectedBy: [RelConnectsStructuralMember]
	AssignedStructuralActivity: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralCurveReaction implements StructuralReaction{
	PredefinedType: StructuralCurveActivityTypeEnum
	AppliedLoad: StructuralLoad
	GlobalOrLocal: GlobalOrLocalEnum
	AssignedToStructuralItem: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
interface StructuralLoad{
	Name: Label!
}
type StructuralLoadConfiguration implements StructuralLoad{
	Values: [StructuralLoadOrResult]
	Locations: [[LengthMeasure]]!
	Name: Label!
}
interface StructuralLoadOrResult implements StructuralLoad{
	Name: Label!
}
type StructuralLoadCase implements StructuralLoadGroup{
	SelfWeightCoefficients: [RatioMeasure]!
	PredefinedType: LoadGroupTypeEnum
	ActionType: ActionTypeEnum
	ActionSource: ActionSourceTypeEnum
	Coefficient: RatioMeasure!
	Purpose: Label!
	SourceOfResultGroup: [StructuralResultGroup]
	LoadGroupFor: [StructuralAnalysisModel]
	IsGroupedBy: [RelAssignsToGroup]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralLoadLinearForce implements StructuralLoadStatic{
	LinearForceX: LinearForceMeasure!
	LinearForceY: LinearForceMeasure!
	LinearForceZ: LinearForceMeasure!
	LinearMomentX: LinearMomentMeasure!
	LinearMomentY: LinearMomentMeasure!
	LinearMomentZ: LinearMomentMeasure!
	Name: Label!
}
interface StructuralLoadStatic implements StructuralLoadOrResult{
	Name: Label!
}
type SurfaceReinforcementArea implements StructuralLoadOrResult{
	SurfaceReinforcement1: [LengthMeasure]!
	SurfaceReinforcement2: [LengthMeasure]!
	ShearReinforcement: RatioMeasure!
	Name: Label!
}
type StructuralLoadPlanarForce implements StructuralLoadStatic{
	PlanarForceX: PlanarForceMeasure!
	PlanarForceY: PlanarForceMeasure!
	PlanarForceZ: PlanarForceMeasure!
	Name: Label!
}
type StructuralLoadSingleDisplacement implements StructuralLoadStatic{
	DisplacementX: LengthMeasure!
	DisplacementY: LengthMeasure!
	DisplacementZ: LengthMeasure!
	RotationalDisplacementRX: PlaneAngleMeasure!
	RotationalDisplacementRY: PlaneAngleMeasure!
	RotationalDisplacementRZ: PlaneAngleMeasure!
	Name: Label!
}
type StructuralLoadSingleDisplacementDistortion implements StructuralLoadSingleDisplacement{
	Distortion: CurvatureMeasure!
	DisplacementX: LengthMeasure!
	DisplacementY: LengthMeasure!
	DisplacementZ: LengthMeasure!
	RotationalDisplacementRX: PlaneAngleMeasure!
	RotationalDisplacementRY: PlaneAngleMeasure!
	RotationalDisplacementRZ: PlaneAngleMeasure!
	Name: Label!
}
type StructuralLoadSingleForce implements StructuralLoadStatic{
	ForceX: ForceMeasure!
	ForceY: ForceMeasure!
	ForceZ: ForceMeasure!
	MomentX: TorqueMeasure!
	MomentY: TorqueMeasure!
	MomentZ: TorqueMeasure!
	Name: Label!
}
type StructuralLoadSingleForceWarping implements StructuralLoadSingleForce{
	WarpingMoment: WarpingMomentMeasure!
	ForceX: ForceMeasure!
	ForceY: ForceMeasure!
	ForceZ: ForceMeasure!
	MomentX: TorqueMeasure!
	MomentY: TorqueMeasure!
	MomentZ: TorqueMeasure!
	Name: Label!
}
type StructuralLoadTemperature implements StructuralLoadStatic{
	DeltaTConstant: ThermodynamicTemperatureMeasure!
	DeltaTY: ThermodynamicTemperatureMeasure!
	DeltaTZ: ThermodynamicTemperatureMeasure!
	Name: Label!
}
type StructuralSurfaceMember implements StructuralMember{
	PredefinedType: StructuralSurfaceMemberTypeEnum
	Thickness: PositiveLengthMeasure!
	ConnectedBy: [RelConnectsStructuralMember]
	AssignedStructuralActivity: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralPlanarAction implements StructuralSurfaceAction{
	ProjectedOrTrue: ProjectedOrTrueLengthEnum!
	PredefinedType: StructuralSurfaceActivityTypeEnum
	DestabilizingLoad: Boolean!
	AppliedLoad: StructuralLoad
	GlobalOrLocal: GlobalOrLocalEnum
	AssignedToStructuralItem: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralPointReaction implements StructuralReaction{
	AppliedLoad: StructuralLoad
	GlobalOrLocal: GlobalOrLocalEnum
	AssignedToStructuralItem: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralSurfaceReaction implements StructuralReaction{
	PredefinedType: StructuralSurfaceActivityTypeEnum
	AppliedLoad: StructuralLoad
	GlobalOrLocal: GlobalOrLocalEnum
	AssignedToStructuralItem: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StructuralSurfaceMemberVarying implements StructuralSurfaceMember{
	PredefinedType: StructuralSurfaceMemberTypeEnum
	Thickness: PositiveLengthMeasure!
	ConnectedBy: [RelConnectsStructuralMember]
	AssignedStructuralActivity: [RelConnectsStructuralActivity]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type StyledRepresentation implements StyleModel{
	ContextOfItems: RepresentationContext
	RepresentationIdentifier: Label!
	RepresentationType: Label!
	Items: [RepresentationItem]
	RepresentationMap: [RepresentationMap]
	LayerAssignments: [PresentationLayerAssignment]
	OfProductRepresentation: [ProductRepresentation]
}
interface SweptSurface implements Surface{
	SweptCurve: ProfileDef
	Position: Axis2Placement3D!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type SurfaceCurveSweptAreaSolid implements SweptAreaSolid{
	Directrix: Curve
	StartParam: ParameterValue!
	EndParam: ParameterValue!
	ReferenceSurface: Surface
	SweptArea: ProfileDef
	Position: Axis2Placement3D!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type SurfaceOfLinearExtrusion implements SweptSurface{
	ExtrudedDirection: Direction
	Depth: LengthMeasure
	SweptCurve: ProfileDef
	Position: Axis2Placement3D!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type SurfaceOfRevolution implements SweptSurface{
	AxisPosition: Axis1Placement
	SweptCurve: ProfileDef
	Position: Axis2Placement3D!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type SurfaceStyleRendering implements SurfaceStyleShading{
	DiffuseColour: ColourOrFactor!
	TransmissionColour: ColourOrFactor!
	DiffuseTransmissionColour: ColourOrFactor!
	ReflectionColour: ColourOrFactor!
	SpecularColour: ColourOrFactor!
	SpecularHighlight: SpecularHighlightSelect!
	ReflectanceMethod: ReflectanceMethodEnum
	SurfaceColour: ColourRgb
	Transparency: NormalisedRatioMeasure!
}
type SweptDiskSolidPolygonal implements SweptDiskSolid{
	FilletRadius: PositiveLengthMeasure!
	Directrix: Curve
	Radius: PositiveLengthMeasure
	InnerRadius: PositiveLengthMeasure!
	StartParam: ParameterValue!
	EndParam: ParameterValue!
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type Zone implements System{
	LongName: Label!
	ServicesBuildings: [RelServicesBuildings]
	IsGroupedBy: [RelAssignsToGroup]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type Table{
	Name: Label!
	Rows: [TableRow]!
	Columns: [TableColumn]!
}
type TableColumn{
	Identifier: Identifier!
	Name: Label!
	Description: Text!
	Unit: Unit!
	ReferencePath: Reference!
}
type TableRow{
	RowCells: [Value]!
	IsHeading: Boolean!
}
type TaskTimeRecurring implements TaskTime{
	Recurrence: RecurrencePattern
	DurationType: TaskDurationEnum!
	ScheduleDuration: Duration!
	ScheduleStart: DateTime!
	ScheduleFinish: DateTime!
	EarlyStart: DateTime!
	EarlyFinish: DateTime!
	LateStart: DateTime!
	LateFinish: DateTime!
	FreeFloat: Duration!
	TotalFloat: Duration!
	IsCritical: Boolean!
	StatusTime: DateTime!
	ActualDuration: Duration!
	ActualStart: DateTime!
	ActualFinish: DateTime!
	RemainingTime: Duration!
	Completion: PositiveRatioMeasure!
	Name: Label!
	DataOrigin: DataOriginEnum!
	UserDefinedDataOrigin: Label!
}
type TaskType implements TypeProcess{
	PredefinedType: TaskTypeEnum
	WorkMethod: Label!
	Identification: Identifier!
	LongDescription: Text!
	ProcessType: Label!
	OperatesOn: [RelAssignsToProcess]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type TriangulatedFaceSet implements TessellatedFaceSet{
	Normals: [[ParameterValue]]!
	Closed: Boolean!
	CoordIndex: [[PositiveInteger]]
	PnIndex: [PositiveInteger]!
	Coordinates: CartesianPointList3D
	HasColours: [IndexedColourMap]
	HasTextures: [IndexedTextureMap]
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type TextLiteralWithExtent implements TextLiteral{
	Extent: PlanarExtent
	BoxAlignment: BoxAlignment
	Literal: PresentableText
	Placement: Axis2Placement
	Path: TextPath
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type TextureCoordinateGenerator implements TextureCoordinate{
	Mode: Label
	Parameter: [Real]!
	Maps: [SurfaceTexture]
}
type TextureMap implements TextureCoordinate{
	Vertices: [TextureVertex]
	MappedTo: Face
	Maps: [SurfaceTexture]
}
type TimePeriod{
	StartTime: Time
	EndTime: Time
}
type TimeSeriesValue{
	ListValues: [Value]
}
type Vertex implements TopologicalRepresentationItem{
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type WindowStyle implements TypeProduct{
	ConstructionType: WindowStyleConstructionEnum
	OperationType: WindowStyleOperationEnum
	ParameterTakesPrecedence: Boolean
	Sizeable: Boolean
	RepresentationMaps: [RepresentationMap]!
	Tag: Label!
	ReferencedBy: [RelAssignsToProduct]
	ApplicableOccurrence: Identifier!
	HasPropertySets: [PropertySetDefinition]!
	Types: [RelDefinesByType]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type UnitAssignment{
	Units: [Unit]
}
type VertexPoint implements Vertex{
	VertexGeometry: Point
	LayerAssignment: [PresentationLayerAssignment]
	StyledByItem: [StyledItem]
}
type VirtualGridIntersection{
	IntersectingAxes: [GridAxis]
	OffsetDistances: [LengthMeasure]
}
type WallElementedCase implements Wall{
	PredefinedType: WallTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type WallStandardCase implements Wall{
	PredefinedType: WallTypeEnum!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type WindowStandardCase implements Window{
	OverallHeight: PositiveLengthMeasure!
	OverallWidth: PositiveLengthMeasure!
	PredefinedType: WindowTypeEnum!
	PartitioningType: WindowTypePartitioningEnum!
	UserDefinedPartitioningType: Label!
	Tag: Identifier!
	FillsVoids: [RelFillsElement]
	ConnectedTo: [RelConnectsElements]
	IsInterferedByElements: [RelInterferesElements]
	InterferesElements: [RelInterferesElements]
	HasProjections: [RelProjectsElement]
	ReferencedInStructures: [RelReferencedInSpatialStructure]
	HasOpenings: [RelVoidsElement]
	IsConnectionRealization: [RelConnectsWithRealizingElements]
	ProvidesBoundaries: [RelSpaceBoundary]
	ConnectedFrom: [RelConnectsElements]
	ContainedInStructure: [RelContainedInSpatialStructure]
	HasCoverings: [RelCoversBldgElements]
	ObjectPlacement: ObjectPlacement!
	Representation: ProductRepresentation!
	ReferencedBy: [RelAssignsToProduct]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type WorkPlan implements WorkControl{
	PredefinedType: WorkPlanTypeEnum!
	CreationDate: DateTime
	Creators: [Person]!
	Purpose: Label!
	Duration: Duration!
	TotalFloat: Duration!
	StartTime: DateTime
	FinishTime: DateTime!
	Identification: Identifier!
	Controls: [RelAssignsToControl]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}
type WorkSchedule implements WorkControl{
	PredefinedType: WorkScheduleTypeEnum!
	CreationDate: DateTime
	Creators: [Person]!
	Purpose: Label!
	Duration: Duration!
	TotalFloat: Duration!
	StartTime: DateTime
	FinishTime: DateTime!
	Identification: Identifier!
	Controls: [RelAssignsToControl]
	ObjectType: Label!
	IsDeclaredBy: [RelDefinesByObject]
	Declares: [RelDefinesByObject]
	IsTypedBy: [RelDefinesByType]
	IsDefinedBy: [RelDefinesByProperties]
	HasAssignments: [RelAssigns]
	Nests: [RelNests]
	IsNestedBy: [RelNests]
	HasContext: [RelDeclares]
	IsDecomposedBy: [RelAggregates]
	Decomposes: [RelAggregates]
	HasAssociations: [RelAssociates]
	GlobalId: GloballyUniqueId
	OwnerHistory: OwnerHistory!
	Name: Label!
	Description: Text!
}